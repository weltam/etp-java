/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Etp.v12.Datatypes.Object;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ContextInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8448330394395471561L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ContextInfo\",\"namespace\":\"Energistics.Etp.v12.Datatypes.Object\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"depth\",\"type\":\"int\"},{\"name\":\"dataObjectTypes\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[]},{\"name\":\"navigableEdges\",\"type\":{\"type\":\"enum\",\"name\":\"RelationshipKind\",\"symbols\":[\"Primary\",\"Secondary\",\"Both\"],\"fullName\":\"Energistics.Etp.v12.Datatypes.Object.RelationshipKind\",\"depends\":[]}},{\"name\":\"includeSecondaryTargets\",\"type\":\"boolean\",\"default\":false},{\"name\":\"includeSecondarySources\",\"type\":\"boolean\",\"default\":false}],\"fullName\":\"Energistics.Etp.v12.Datatypes.Object.ContextInfo\",\"depends\":[\"Energistics.Etp.v12.Datatypes.Object.RelationshipKind\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ContextInfo> ENCODER =
      new BinaryMessageEncoder<ContextInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ContextInfo> DECODER =
      new BinaryMessageDecoder<ContextInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ContextInfo> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ContextInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ContextInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ContextInfo>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ContextInfo to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ContextInfo from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ContextInfo instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ContextInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence uri;
   private int depth;
   private java.util.List<java.lang.CharSequence> dataObjectTypes;
   private Energistics.Etp.v12.Datatypes.Object.RelationshipKind navigableEdges;
   private boolean includeSecondaryTargets;
   private boolean includeSecondarySources;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ContextInfo() {}

  /**
   * All-args constructor.
   * @param uri The new value for uri
   * @param depth The new value for depth
   * @param dataObjectTypes The new value for dataObjectTypes
   * @param navigableEdges The new value for navigableEdges
   * @param includeSecondaryTargets The new value for includeSecondaryTargets
   * @param includeSecondarySources The new value for includeSecondarySources
   */
  public ContextInfo(java.lang.CharSequence uri, java.lang.Integer depth, java.util.List<java.lang.CharSequence> dataObjectTypes, Energistics.Etp.v12.Datatypes.Object.RelationshipKind navigableEdges, java.lang.Boolean includeSecondaryTargets, java.lang.Boolean includeSecondarySources) {
    this.uri = uri;
    this.depth = depth;
    this.dataObjectTypes = dataObjectTypes;
    this.navigableEdges = navigableEdges;
    this.includeSecondaryTargets = includeSecondaryTargets;
    this.includeSecondarySources = includeSecondarySources;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uri;
    case 1: return depth;
    case 2: return dataObjectTypes;
    case 3: return navigableEdges;
    case 4: return includeSecondaryTargets;
    case 5: return includeSecondarySources;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uri = (java.lang.CharSequence)value$; break;
    case 1: depth = (java.lang.Integer)value$; break;
    case 2: dataObjectTypes = (java.util.List<java.lang.CharSequence>)value$; break;
    case 3: navigableEdges = (Energistics.Etp.v12.Datatypes.Object.RelationshipKind)value$; break;
    case 4: includeSecondaryTargets = (java.lang.Boolean)value$; break;
    case 5: includeSecondarySources = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'uri' field.
   * @return The value of the 'uri' field.
   */
  public java.lang.CharSequence getUri() {
    return uri;
  }


  /**
   * Sets the value of the 'uri' field.
   * @param value the value to set.
   */
  public void setUri(java.lang.CharSequence value) {
    this.uri = value;
  }

  /**
   * Gets the value of the 'depth' field.
   * @return The value of the 'depth' field.
   */
  public int getDepth() {
    return depth;
  }


  /**
   * Sets the value of the 'depth' field.
   * @param value the value to set.
   */
  public void setDepth(int value) {
    this.depth = value;
  }

  /**
   * Gets the value of the 'dataObjectTypes' field.
   * @return The value of the 'dataObjectTypes' field.
   */
  public java.util.List<java.lang.CharSequence> getDataObjectTypes() {
    return dataObjectTypes;
  }


  /**
   * Sets the value of the 'dataObjectTypes' field.
   * @param value the value to set.
   */
  public void setDataObjectTypes(java.util.List<java.lang.CharSequence> value) {
    this.dataObjectTypes = value;
  }

  /**
   * Gets the value of the 'navigableEdges' field.
   * @return The value of the 'navigableEdges' field.
   */
  public Energistics.Etp.v12.Datatypes.Object.RelationshipKind getNavigableEdges() {
    return navigableEdges;
  }


  /**
   * Sets the value of the 'navigableEdges' field.
   * @param value the value to set.
   */
  public void setNavigableEdges(Energistics.Etp.v12.Datatypes.Object.RelationshipKind value) {
    this.navigableEdges = value;
  }

  /**
   * Gets the value of the 'includeSecondaryTargets' field.
   * @return The value of the 'includeSecondaryTargets' field.
   */
  public boolean getIncludeSecondaryTargets() {
    return includeSecondaryTargets;
  }


  /**
   * Sets the value of the 'includeSecondaryTargets' field.
   * @param value the value to set.
   */
  public void setIncludeSecondaryTargets(boolean value) {
    this.includeSecondaryTargets = value;
  }

  /**
   * Gets the value of the 'includeSecondarySources' field.
   * @return The value of the 'includeSecondarySources' field.
   */
  public boolean getIncludeSecondarySources() {
    return includeSecondarySources;
  }


  /**
   * Sets the value of the 'includeSecondarySources' field.
   * @param value the value to set.
   */
  public void setIncludeSecondarySources(boolean value) {
    this.includeSecondarySources = value;
  }

  /**
   * Creates a new ContextInfo RecordBuilder.
   * @return A new ContextInfo RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder newBuilder() {
    return new Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder();
  }

  /**
   * Creates a new ContextInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ContextInfo RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder newBuilder(Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder other) {
    if (other == null) {
      return new Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder();
    } else {
      return new Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder(other);
    }
  }

  /**
   * Creates a new ContextInfo RecordBuilder by copying an existing ContextInfo instance.
   * @param other The existing instance to copy.
   * @return A new ContextInfo RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder newBuilder(Energistics.Etp.v12.Datatypes.Object.ContextInfo other) {
    if (other == null) {
      return new Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder();
    } else {
      return new Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder(other);
    }
  }

  /**
   * RecordBuilder for ContextInfo instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ContextInfo>
    implements org.apache.avro.data.RecordBuilder<ContextInfo> {

    private java.lang.CharSequence uri;
    private int depth;
    private java.util.List<java.lang.CharSequence> dataObjectTypes;
    private Energistics.Etp.v12.Datatypes.Object.RelationshipKind navigableEdges;
    private boolean includeSecondaryTargets;
    private boolean includeSecondarySources;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uri)) {
        this.uri = data().deepCopy(fields()[0].schema(), other.uri);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.depth)) {
        this.depth = data().deepCopy(fields()[1].schema(), other.depth);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.dataObjectTypes)) {
        this.dataObjectTypes = data().deepCopy(fields()[2].schema(), other.dataObjectTypes);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.navigableEdges)) {
        this.navigableEdges = data().deepCopy(fields()[3].schema(), other.navigableEdges);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.includeSecondaryTargets)) {
        this.includeSecondaryTargets = data().deepCopy(fields()[4].schema(), other.includeSecondaryTargets);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.includeSecondarySources)) {
        this.includeSecondarySources = data().deepCopy(fields()[5].schema(), other.includeSecondarySources);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing ContextInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(Energistics.Etp.v12.Datatypes.Object.ContextInfo other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.uri)) {
        this.uri = data().deepCopy(fields()[0].schema(), other.uri);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.depth)) {
        this.depth = data().deepCopy(fields()[1].schema(), other.depth);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dataObjectTypes)) {
        this.dataObjectTypes = data().deepCopy(fields()[2].schema(), other.dataObjectTypes);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.navigableEdges)) {
        this.navigableEdges = data().deepCopy(fields()[3].schema(), other.navigableEdges);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.includeSecondaryTargets)) {
        this.includeSecondaryTargets = data().deepCopy(fields()[4].schema(), other.includeSecondaryTargets);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.includeSecondarySources)) {
        this.includeSecondarySources = data().deepCopy(fields()[5].schema(), other.includeSecondarySources);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'uri' field.
      * @return The value.
      */
    public java.lang.CharSequence getUri() {
      return uri;
    }


    /**
      * Sets the value of the 'uri' field.
      * @param value The value of 'uri'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder setUri(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.uri = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uri' field has been set.
      * @return True if the 'uri' field has been set, false otherwise.
      */
    public boolean hasUri() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uri' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder clearUri() {
      uri = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'depth' field.
      * @return The value.
      */
    public int getDepth() {
      return depth;
    }


    /**
      * Sets the value of the 'depth' field.
      * @param value The value of 'depth'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder setDepth(int value) {
      validate(fields()[1], value);
      this.depth = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'depth' field has been set.
      * @return True if the 'depth' field has been set, false otherwise.
      */
    public boolean hasDepth() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'depth' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder clearDepth() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataObjectTypes' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getDataObjectTypes() {
      return dataObjectTypes;
    }


    /**
      * Sets the value of the 'dataObjectTypes' field.
      * @param value The value of 'dataObjectTypes'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder setDataObjectTypes(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[2], value);
      this.dataObjectTypes = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'dataObjectTypes' field has been set.
      * @return True if the 'dataObjectTypes' field has been set, false otherwise.
      */
    public boolean hasDataObjectTypes() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'dataObjectTypes' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder clearDataObjectTypes() {
      dataObjectTypes = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'navigableEdges' field.
      * @return The value.
      */
    public Energistics.Etp.v12.Datatypes.Object.RelationshipKind getNavigableEdges() {
      return navigableEdges;
    }


    /**
      * Sets the value of the 'navigableEdges' field.
      * @param value The value of 'navigableEdges'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder setNavigableEdges(Energistics.Etp.v12.Datatypes.Object.RelationshipKind value) {
      validate(fields()[3], value);
      this.navigableEdges = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'navigableEdges' field has been set.
      * @return True if the 'navigableEdges' field has been set, false otherwise.
      */
    public boolean hasNavigableEdges() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'navigableEdges' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder clearNavigableEdges() {
      navigableEdges = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'includeSecondaryTargets' field.
      * @return The value.
      */
    public boolean getIncludeSecondaryTargets() {
      return includeSecondaryTargets;
    }


    /**
      * Sets the value of the 'includeSecondaryTargets' field.
      * @param value The value of 'includeSecondaryTargets'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder setIncludeSecondaryTargets(boolean value) {
      validate(fields()[4], value);
      this.includeSecondaryTargets = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'includeSecondaryTargets' field has been set.
      * @return True if the 'includeSecondaryTargets' field has been set, false otherwise.
      */
    public boolean hasIncludeSecondaryTargets() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'includeSecondaryTargets' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder clearIncludeSecondaryTargets() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'includeSecondarySources' field.
      * @return The value.
      */
    public boolean getIncludeSecondarySources() {
      return includeSecondarySources;
    }


    /**
      * Sets the value of the 'includeSecondarySources' field.
      * @param value The value of 'includeSecondarySources'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder setIncludeSecondarySources(boolean value) {
      validate(fields()[5], value);
      this.includeSecondarySources = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'includeSecondarySources' field has been set.
      * @return True if the 'includeSecondarySources' field has been set, false otherwise.
      */
    public boolean hasIncludeSecondarySources() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'includeSecondarySources' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.ContextInfo.Builder clearIncludeSecondarySources() {
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ContextInfo build() {
      try {
        ContextInfo record = new ContextInfo();
        record.uri = fieldSetFlags()[0] ? this.uri : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.depth = fieldSetFlags()[1] ? this.depth : (java.lang.Integer) defaultValue(fields()[1]);
        record.dataObjectTypes = fieldSetFlags()[2] ? this.dataObjectTypes : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[2]);
        record.navigableEdges = fieldSetFlags()[3] ? this.navigableEdges : (Energistics.Etp.v12.Datatypes.Object.RelationshipKind) defaultValue(fields()[3]);
        record.includeSecondaryTargets = fieldSetFlags()[4] ? this.includeSecondaryTargets : (java.lang.Boolean) defaultValue(fields()[4]);
        record.includeSecondarySources = fieldSetFlags()[5] ? this.includeSecondarySources : (java.lang.Boolean) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ContextInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<ContextInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ContextInfo>
    READER$ = (org.apache.avro.io.DatumReader<ContextInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.uri);

    out.writeInt(this.depth);

    long size0 = this.dataObjectTypes.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.lang.CharSequence e0: this.dataObjectTypes) {
      actualSize0++;
      out.startItem();
      out.writeString(e0);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    out.writeEnum(this.navigableEdges.ordinal());

    out.writeBoolean(this.includeSecondaryTargets);

    out.writeBoolean(this.includeSecondarySources);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.uri = in.readString(this.uri instanceof Utf8 ? (Utf8)this.uri : null);

      this.depth = in.readInt();

      long size0 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a0 = this.dataObjectTypes;
      if (a0 == null) {
        a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("dataObjectTypes").schema());
        this.dataObjectTypes = a0;
      } else a0.clear();
      SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
          e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
          a0.add(e0);
        }
      }

      this.navigableEdges = Energistics.Etp.v12.Datatypes.Object.RelationshipKind.values()[in.readEnum()];

      this.includeSecondaryTargets = in.readBoolean();

      this.includeSecondarySources = in.readBoolean();

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.uri = in.readString(this.uri instanceof Utf8 ? (Utf8)this.uri : null);
          break;

        case 1:
          this.depth = in.readInt();
          break;

        case 2:
          long size0 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a0 = this.dataObjectTypes;
          if (a0 == null) {
            a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("dataObjectTypes").schema());
            this.dataObjectTypes = a0;
          } else a0.clear();
          SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
              e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
              a0.add(e0);
            }
          }
          break;

        case 3:
          this.navigableEdges = Energistics.Etp.v12.Datatypes.Object.RelationshipKind.values()[in.readEnum()];
          break;

        case 4:
          this.includeSecondaryTargets = in.readBoolean();
          break;

        case 5:
          this.includeSecondarySources = in.readBoolean();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










