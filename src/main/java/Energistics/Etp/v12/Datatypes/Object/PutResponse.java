/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Etp.v12.Datatypes.Object;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PutResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8698312069956418662L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PutResponse\",\"namespace\":\"Energistics.Etp.v12.Datatypes.Object\",\"fields\":[{\"name\":\"createdContainedObjectUris\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[]},{\"name\":\"deletedContainedObjectUris\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[]},{\"name\":\"joinedContainedObjectUris\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[]},{\"name\":\"unjoinedContainedObjectUris\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[]}],\"fullName\":\"Energistics.Etp.v12.Datatypes.Object.PutResponse\",\"depends\":[]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PutResponse> ENCODER =
      new BinaryMessageEncoder<PutResponse>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PutResponse> DECODER =
      new BinaryMessageDecoder<PutResponse>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PutResponse> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PutResponse> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PutResponse> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PutResponse>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PutResponse to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PutResponse from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PutResponse instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PutResponse fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.util.List<java.lang.CharSequence> createdContainedObjectUris;
   private java.util.List<java.lang.CharSequence> deletedContainedObjectUris;
   private java.util.List<java.lang.CharSequence> joinedContainedObjectUris;
   private java.util.List<java.lang.CharSequence> unjoinedContainedObjectUris;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PutResponse() {}

  /**
   * All-args constructor.
   * @param createdContainedObjectUris The new value for createdContainedObjectUris
   * @param deletedContainedObjectUris The new value for deletedContainedObjectUris
   * @param joinedContainedObjectUris The new value for joinedContainedObjectUris
   * @param unjoinedContainedObjectUris The new value for unjoinedContainedObjectUris
   */
  public PutResponse(java.util.List<java.lang.CharSequence> createdContainedObjectUris, java.util.List<java.lang.CharSequence> deletedContainedObjectUris, java.util.List<java.lang.CharSequence> joinedContainedObjectUris, java.util.List<java.lang.CharSequence> unjoinedContainedObjectUris) {
    this.createdContainedObjectUris = createdContainedObjectUris;
    this.deletedContainedObjectUris = deletedContainedObjectUris;
    this.joinedContainedObjectUris = joinedContainedObjectUris;
    this.unjoinedContainedObjectUris = unjoinedContainedObjectUris;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return createdContainedObjectUris;
    case 1: return deletedContainedObjectUris;
    case 2: return joinedContainedObjectUris;
    case 3: return unjoinedContainedObjectUris;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: createdContainedObjectUris = (java.util.List<java.lang.CharSequence>)value$; break;
    case 1: deletedContainedObjectUris = (java.util.List<java.lang.CharSequence>)value$; break;
    case 2: joinedContainedObjectUris = (java.util.List<java.lang.CharSequence>)value$; break;
    case 3: unjoinedContainedObjectUris = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'createdContainedObjectUris' field.
   * @return The value of the 'createdContainedObjectUris' field.
   */
  public java.util.List<java.lang.CharSequence> getCreatedContainedObjectUris() {
    return createdContainedObjectUris;
  }


  /**
   * Sets the value of the 'createdContainedObjectUris' field.
   * @param value the value to set.
   */
  public void setCreatedContainedObjectUris(java.util.List<java.lang.CharSequence> value) {
    this.createdContainedObjectUris = value;
  }

  /**
   * Gets the value of the 'deletedContainedObjectUris' field.
   * @return The value of the 'deletedContainedObjectUris' field.
   */
  public java.util.List<java.lang.CharSequence> getDeletedContainedObjectUris() {
    return deletedContainedObjectUris;
  }


  /**
   * Sets the value of the 'deletedContainedObjectUris' field.
   * @param value the value to set.
   */
  public void setDeletedContainedObjectUris(java.util.List<java.lang.CharSequence> value) {
    this.deletedContainedObjectUris = value;
  }

  /**
   * Gets the value of the 'joinedContainedObjectUris' field.
   * @return The value of the 'joinedContainedObjectUris' field.
   */
  public java.util.List<java.lang.CharSequence> getJoinedContainedObjectUris() {
    return joinedContainedObjectUris;
  }


  /**
   * Sets the value of the 'joinedContainedObjectUris' field.
   * @param value the value to set.
   */
  public void setJoinedContainedObjectUris(java.util.List<java.lang.CharSequence> value) {
    this.joinedContainedObjectUris = value;
  }

  /**
   * Gets the value of the 'unjoinedContainedObjectUris' field.
   * @return The value of the 'unjoinedContainedObjectUris' field.
   */
  public java.util.List<java.lang.CharSequence> getUnjoinedContainedObjectUris() {
    return unjoinedContainedObjectUris;
  }


  /**
   * Sets the value of the 'unjoinedContainedObjectUris' field.
   * @param value the value to set.
   */
  public void setUnjoinedContainedObjectUris(java.util.List<java.lang.CharSequence> value) {
    this.unjoinedContainedObjectUris = value;
  }

  /**
   * Creates a new PutResponse RecordBuilder.
   * @return A new PutResponse RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder newBuilder() {
    return new Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder();
  }

  /**
   * Creates a new PutResponse RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PutResponse RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder newBuilder(Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder other) {
    if (other == null) {
      return new Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder();
    } else {
      return new Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder(other);
    }
  }

  /**
   * Creates a new PutResponse RecordBuilder by copying an existing PutResponse instance.
   * @param other The existing instance to copy.
   * @return A new PutResponse RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder newBuilder(Energistics.Etp.v12.Datatypes.Object.PutResponse other) {
    if (other == null) {
      return new Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder();
    } else {
      return new Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder(other);
    }
  }

  /**
   * RecordBuilder for PutResponse instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PutResponse>
    implements org.apache.avro.data.RecordBuilder<PutResponse> {

    private java.util.List<java.lang.CharSequence> createdContainedObjectUris;
    private java.util.List<java.lang.CharSequence> deletedContainedObjectUris;
    private java.util.List<java.lang.CharSequence> joinedContainedObjectUris;
    private java.util.List<java.lang.CharSequence> unjoinedContainedObjectUris;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.createdContainedObjectUris)) {
        this.createdContainedObjectUris = data().deepCopy(fields()[0].schema(), other.createdContainedObjectUris);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.deletedContainedObjectUris)) {
        this.deletedContainedObjectUris = data().deepCopy(fields()[1].schema(), other.deletedContainedObjectUris);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.joinedContainedObjectUris)) {
        this.joinedContainedObjectUris = data().deepCopy(fields()[2].schema(), other.joinedContainedObjectUris);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.unjoinedContainedObjectUris)) {
        this.unjoinedContainedObjectUris = data().deepCopy(fields()[3].schema(), other.unjoinedContainedObjectUris);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing PutResponse instance
     * @param other The existing instance to copy.
     */
    private Builder(Energistics.Etp.v12.Datatypes.Object.PutResponse other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.createdContainedObjectUris)) {
        this.createdContainedObjectUris = data().deepCopy(fields()[0].schema(), other.createdContainedObjectUris);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deletedContainedObjectUris)) {
        this.deletedContainedObjectUris = data().deepCopy(fields()[1].schema(), other.deletedContainedObjectUris);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.joinedContainedObjectUris)) {
        this.joinedContainedObjectUris = data().deepCopy(fields()[2].schema(), other.joinedContainedObjectUris);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.unjoinedContainedObjectUris)) {
        this.unjoinedContainedObjectUris = data().deepCopy(fields()[3].schema(), other.unjoinedContainedObjectUris);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'createdContainedObjectUris' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getCreatedContainedObjectUris() {
      return createdContainedObjectUris;
    }


    /**
      * Sets the value of the 'createdContainedObjectUris' field.
      * @param value The value of 'createdContainedObjectUris'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder setCreatedContainedObjectUris(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.createdContainedObjectUris = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'createdContainedObjectUris' field has been set.
      * @return True if the 'createdContainedObjectUris' field has been set, false otherwise.
      */
    public boolean hasCreatedContainedObjectUris() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'createdContainedObjectUris' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder clearCreatedContainedObjectUris() {
      createdContainedObjectUris = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'deletedContainedObjectUris' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getDeletedContainedObjectUris() {
      return deletedContainedObjectUris;
    }


    /**
      * Sets the value of the 'deletedContainedObjectUris' field.
      * @param value The value of 'deletedContainedObjectUris'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder setDeletedContainedObjectUris(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.deletedContainedObjectUris = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'deletedContainedObjectUris' field has been set.
      * @return True if the 'deletedContainedObjectUris' field has been set, false otherwise.
      */
    public boolean hasDeletedContainedObjectUris() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'deletedContainedObjectUris' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder clearDeletedContainedObjectUris() {
      deletedContainedObjectUris = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'joinedContainedObjectUris' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getJoinedContainedObjectUris() {
      return joinedContainedObjectUris;
    }


    /**
      * Sets the value of the 'joinedContainedObjectUris' field.
      * @param value The value of 'joinedContainedObjectUris'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder setJoinedContainedObjectUris(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[2], value);
      this.joinedContainedObjectUris = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'joinedContainedObjectUris' field has been set.
      * @return True if the 'joinedContainedObjectUris' field has been set, false otherwise.
      */
    public boolean hasJoinedContainedObjectUris() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'joinedContainedObjectUris' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder clearJoinedContainedObjectUris() {
      joinedContainedObjectUris = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'unjoinedContainedObjectUris' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getUnjoinedContainedObjectUris() {
      return unjoinedContainedObjectUris;
    }


    /**
      * Sets the value of the 'unjoinedContainedObjectUris' field.
      * @param value The value of 'unjoinedContainedObjectUris'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder setUnjoinedContainedObjectUris(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[3], value);
      this.unjoinedContainedObjectUris = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'unjoinedContainedObjectUris' field has been set.
      * @return True if the 'unjoinedContainedObjectUris' field has been set, false otherwise.
      */
    public boolean hasUnjoinedContainedObjectUris() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'unjoinedContainedObjectUris' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PutResponse.Builder clearUnjoinedContainedObjectUris() {
      unjoinedContainedObjectUris = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PutResponse build() {
      try {
        PutResponse record = new PutResponse();
        record.createdContainedObjectUris = fieldSetFlags()[0] ? this.createdContainedObjectUris : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
        record.deletedContainedObjectUris = fieldSetFlags()[1] ? this.deletedContainedObjectUris : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
        record.joinedContainedObjectUris = fieldSetFlags()[2] ? this.joinedContainedObjectUris : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[2]);
        record.unjoinedContainedObjectUris = fieldSetFlags()[3] ? this.unjoinedContainedObjectUris : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PutResponse>
    WRITER$ = (org.apache.avro.io.DatumWriter<PutResponse>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PutResponse>
    READER$ = (org.apache.avro.io.DatumReader<PutResponse>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    long size0 = this.createdContainedObjectUris.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.lang.CharSequence e0: this.createdContainedObjectUris) {
      actualSize0++;
      out.startItem();
      out.writeString(e0);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    long size1 = this.deletedContainedObjectUris.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (java.lang.CharSequence e1: this.deletedContainedObjectUris) {
      actualSize1++;
      out.startItem();
      out.writeString(e1);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    long size2 = this.joinedContainedObjectUris.size();
    out.writeArrayStart();
    out.setItemCount(size2);
    long actualSize2 = 0;
    for (java.lang.CharSequence e2: this.joinedContainedObjectUris) {
      actualSize2++;
      out.startItem();
      out.writeString(e2);
    }
    out.writeArrayEnd();
    if (actualSize2 != size2)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size2 + ", but element count was " + actualSize2 + ".");

    long size3 = this.unjoinedContainedObjectUris.size();
    out.writeArrayStart();
    out.setItemCount(size3);
    long actualSize3 = 0;
    for (java.lang.CharSequence e3: this.unjoinedContainedObjectUris) {
      actualSize3++;
      out.startItem();
      out.writeString(e3);
    }
    out.writeArrayEnd();
    if (actualSize3 != size3)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size3 + ", but element count was " + actualSize3 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      long size0 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a0 = this.createdContainedObjectUris;
      if (a0 == null) {
        a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("createdContainedObjectUris").schema());
        this.createdContainedObjectUris = a0;
      } else a0.clear();
      SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
          e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
          a0.add(e0);
        }
      }

      long size1 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a1 = this.deletedContainedObjectUris;
      if (a1 == null) {
        a1 = new SpecificData.Array<java.lang.CharSequence>((int)size1, SCHEMA$.getField("deletedContainedObjectUris").schema());
        this.deletedContainedObjectUris = a1;
      } else a1.clear();
      SpecificData.Array<java.lang.CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          java.lang.CharSequence e1 = (ga1 != null ? ga1.peek() : null);
          e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
          a1.add(e1);
        }
      }

      long size2 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a2 = this.joinedContainedObjectUris;
      if (a2 == null) {
        a2 = new SpecificData.Array<java.lang.CharSequence>((int)size2, SCHEMA$.getField("joinedContainedObjectUris").schema());
        this.joinedContainedObjectUris = a2;
      } else a2.clear();
      SpecificData.Array<java.lang.CharSequence> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a2 : null);
      for ( ; 0 < size2; size2 = in.arrayNext()) {
        for ( ; size2 != 0; size2--) {
          java.lang.CharSequence e2 = (ga2 != null ? ga2.peek() : null);
          e2 = in.readString(e2 instanceof Utf8 ? (Utf8)e2 : null);
          a2.add(e2);
        }
      }

      long size3 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a3 = this.unjoinedContainedObjectUris;
      if (a3 == null) {
        a3 = new SpecificData.Array<java.lang.CharSequence>((int)size3, SCHEMA$.getField("unjoinedContainedObjectUris").schema());
        this.unjoinedContainedObjectUris = a3;
      } else a3.clear();
      SpecificData.Array<java.lang.CharSequence> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a3 : null);
      for ( ; 0 < size3; size3 = in.arrayNext()) {
        for ( ; size3 != 0; size3--) {
          java.lang.CharSequence e3 = (ga3 != null ? ga3.peek() : null);
          e3 = in.readString(e3 instanceof Utf8 ? (Utf8)e3 : null);
          a3.add(e3);
        }
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          long size0 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a0 = this.createdContainedObjectUris;
          if (a0 == null) {
            a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("createdContainedObjectUris").schema());
            this.createdContainedObjectUris = a0;
          } else a0.clear();
          SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
              e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
              a0.add(e0);
            }
          }
          break;

        case 1:
          long size1 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a1 = this.deletedContainedObjectUris;
          if (a1 == null) {
            a1 = new SpecificData.Array<java.lang.CharSequence>((int)size1, SCHEMA$.getField("deletedContainedObjectUris").schema());
            this.deletedContainedObjectUris = a1;
          } else a1.clear();
          SpecificData.Array<java.lang.CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              java.lang.CharSequence e1 = (ga1 != null ? ga1.peek() : null);
              e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
              a1.add(e1);
            }
          }
          break;

        case 2:
          long size2 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a2 = this.joinedContainedObjectUris;
          if (a2 == null) {
            a2 = new SpecificData.Array<java.lang.CharSequence>((int)size2, SCHEMA$.getField("joinedContainedObjectUris").schema());
            this.joinedContainedObjectUris = a2;
          } else a2.clear();
          SpecificData.Array<java.lang.CharSequence> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a2 : null);
          for ( ; 0 < size2; size2 = in.arrayNext()) {
            for ( ; size2 != 0; size2--) {
              java.lang.CharSequence e2 = (ga2 != null ? ga2.peek() : null);
              e2 = in.readString(e2 instanceof Utf8 ? (Utf8)e2 : null);
              a2.add(e2);
            }
          }
          break;

        case 3:
          long size3 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a3 = this.unjoinedContainedObjectUris;
          if (a3 == null) {
            a3 = new SpecificData.Array<java.lang.CharSequence>((int)size3, SCHEMA$.getField("unjoinedContainedObjectUris").schema());
            this.unjoinedContainedObjectUris = a3;
          } else a3.clear();
          SpecificData.Array<java.lang.CharSequence> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a3 : null);
          for ( ; 0 < size3; size3 = in.arrayNext()) {
            for ( ; size3 != 0; size3--) {
              java.lang.CharSequence e3 = (ga3 != null ? ga3.peek() : null);
              e3 = in.readString(e3 instanceof Utf8 ? (Utf8)e3 : null);
              a3.add(e3);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










