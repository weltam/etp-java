/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Etp.v12.Datatypes.Object;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PartsMetadataInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3090374127964224954L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PartsMetadataInfo\",\"namespace\":\"Energistics.Etp.v12.Datatypes.Object\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"index\",\"type\":{\"type\":\"record\",\"name\":\"IndexMetadataRecord\",\"namespace\":\"Energistics.Etp.v12.Datatypes.ChannelData\",\"fields\":[{\"name\":\"indexKind\",\"type\":{\"type\":\"enum\",\"name\":\"ChannelIndexKind\",\"symbols\":[\"DateTime\",\"ElapsedTime\",\"MeasuredDepth\",\"TrueVerticalDepth\",\"PassIndexedDepth\",\"Pressure\",\"Temperature\",\"Scalar\"],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.ChannelIndexKind\",\"depends\":[]},\"default\":\"DateTime\"},{\"name\":\"interval\",\"type\":{\"type\":\"record\",\"name\":\"IndexInterval\",\"namespace\":\"Energistics.Etp.v12.Datatypes.Object\",\"fields\":[{\"name\":\"startIndex\",\"type\":{\"type\":\"record\",\"name\":\"IndexValue\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"long\",\"double\",{\"type\":\"record\",\"name\":\"PassIndexedDepth\",\"namespace\":\"Energistics.Etp.v12.Datatypes.ChannelData\",\"fields\":[{\"name\":\"pass\",\"type\":\"long\"},{\"name\":\"direction\",\"type\":{\"type\":\"enum\",\"name\":\"PassDirection\",\"symbols\":[\"Up\",\"HoldingSteady\",\"Down\"],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.PassDirection\",\"depends\":[]}},{\"name\":\"depth\",\"type\":\"double\"}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.PassIndexedDepth\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ChannelData.PassDirection\"]}]}],\"fullName\":\"Energistics.Etp.v12.Datatypes.IndexValue\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ChannelData.PassIndexedDepth\"]}},{\"name\":\"endIndex\",\"type\":\"Energistics.Etp.v12.Datatypes.IndexValue\"},{\"name\":\"uom\",\"type\":\"string\"},{\"name\":\"depthDatum\",\"type\":\"string\",\"default\":\"\"}],\"fullName\":\"Energistics.Etp.v12.Datatypes.Object.IndexInterval\",\"depends\":[\"Energistics.Etp.v12.Datatypes.IndexValue\",\"Energistics.Etp.v12.Datatypes.IndexValue\"]}},{\"name\":\"direction\",\"type\":{\"type\":\"enum\",\"name\":\"IndexDirection\",\"symbols\":[\"Increasing\",\"Decreasing\",\"Unordered\"],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.IndexDirection\",\"depends\":[]},\"default\":\"Increasing\"},{\"name\":\"name\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"uom\",\"type\":\"string\"},{\"name\":\"depthDatum\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"indexPropertyKindUri\",\"type\":\"string\"},{\"name\":\"filterable\",\"type\":\"boolean\",\"default\":true}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ChannelData.ChannelIndexKind\",\"Energistics.Etp.v12.Datatypes.Object.IndexInterval\",\"Energistics.Etp.v12.Datatypes.ChannelData.IndexDirection\"]}},{\"name\":\"customData\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"DataValue\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"boolean\",\"int\",\"long\",\"float\",\"double\",\"string\",{\"type\":\"record\",\"name\":\"ArrayOfBoolean\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"boolean\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfBoolean\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfNullableBoolean\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"boolean\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfNullableBoolean\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfInt\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"int\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfInt\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfNullableInt\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"int\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfNullableInt\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfLong\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"long\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfLong\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfNullableLong\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"long\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfNullableLong\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfFloat\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"float\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfFloat\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfDouble\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfDouble\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfString\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfString\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfBytes\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"bytes\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfBytes\",\"depends\":[]},\"bytes\",{\"type\":\"record\",\"name\":\"AnySparseArray\",\"fields\":[{\"name\":\"slices\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AnySubarray\",\"fields\":[{\"name\":\"start\",\"type\":\"long\"},{\"name\":\"slice\",\"type\":{\"type\":\"record\",\"name\":\"AnyArray\",\"fields\":[{\"name\":\"item\",\"type\":[\"ArrayOfBoolean\",\"ArrayOfInt\",\"ArrayOfLong\",\"ArrayOfFloat\",\"ArrayOfDouble\",\"ArrayOfString\",\"bytes\"]}],\"fullName\":\"Energistics.Etp.v12.Datatypes.AnyArray\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ArrayOfBoolean\",\"Energistics.Etp.v12.Datatypes.ArrayOfInt\",\"Energistics.Etp.v12.Datatypes.ArrayOfLong\",\"Energistics.Etp.v12.Datatypes.ArrayOfFloat\",\"Energistics.Etp.v12.Datatypes.ArrayOfDouble\",\"Energistics.Etp.v12.Datatypes.ArrayOfString\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.AnySubarray\",\"depends\":[\"Energistics.Etp.v12.Datatypes.AnyArray\"]}}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.AnySparseArray\",\"depends\":[\"Energistics.Etp.v12.Datatypes.AnySubarray\"]}]}],\"fullName\":\"Energistics.Etp.v12.Datatypes.DataValue\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ArrayOfBoolean\",\"Energistics.Etp.v12.Datatypes.ArrayOfNullableBoolean\",\"Energistics.Etp.v12.Datatypes.ArrayOfInt\",\"Energistics.Etp.v12.Datatypes.ArrayOfNullableInt\",\"Energistics.Etp.v12.Datatypes.ArrayOfLong\",\"Energistics.Etp.v12.Datatypes.ArrayOfNullableLong\",\"Energistics.Etp.v12.Datatypes.ArrayOfFloat\",\"Energistics.Etp.v12.Datatypes.ArrayOfDouble\",\"Energistics.Etp.v12.Datatypes.ArrayOfString\",\"Energistics.Etp.v12.Datatypes.ArrayOfBytes\",\"Energistics.Etp.v12.Datatypes.AnySparseArray\"]}},\"default\":{}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord\",\"Energistics.Etp.v12.Datatypes.DataValue\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PartsMetadataInfo> ENCODER =
      new BinaryMessageEncoder<PartsMetadataInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PartsMetadataInfo> DECODER =
      new BinaryMessageDecoder<PartsMetadataInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PartsMetadataInfo> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PartsMetadataInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PartsMetadataInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PartsMetadataInfo>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PartsMetadataInfo to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PartsMetadataInfo from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PartsMetadataInfo instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PartsMetadataInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence uri;
   private java.lang.CharSequence name;
   private Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord index;
   private java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> customData;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PartsMetadataInfo() {}

  /**
   * All-args constructor.
   * @param uri The new value for uri
   * @param name The new value for name
   * @param index The new value for index
   * @param customData The new value for customData
   */
  public PartsMetadataInfo(java.lang.CharSequence uri, java.lang.CharSequence name, Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord index, java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> customData) {
    this.uri = uri;
    this.name = name;
    this.index = index;
    this.customData = customData;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uri;
    case 1: return name;
    case 2: return index;
    case 3: return customData;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uri = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: index = (Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord)value$; break;
    case 3: customData = (java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'uri' field.
   * @return The value of the 'uri' field.
   */
  public java.lang.CharSequence getUri() {
    return uri;
  }


  /**
   * Sets the value of the 'uri' field.
   * @param value the value to set.
   */
  public void setUri(java.lang.CharSequence value) {
    this.uri = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'index' field.
   * @return The value of the 'index' field.
   */
  public Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord getIndex() {
    return index;
  }


  /**
   * Sets the value of the 'index' field.
   * @param value the value to set.
   */
  public void setIndex(Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord value) {
    this.index = value;
  }

  /**
   * Gets the value of the 'customData' field.
   * @return The value of the 'customData' field.
   */
  public java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> getCustomData() {
    return customData;
  }


  /**
   * Sets the value of the 'customData' field.
   * @param value the value to set.
   */
  public void setCustomData(java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> value) {
    this.customData = value;
  }

  /**
   * Creates a new PartsMetadataInfo RecordBuilder.
   * @return A new PartsMetadataInfo RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder newBuilder() {
    return new Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder();
  }

  /**
   * Creates a new PartsMetadataInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PartsMetadataInfo RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder newBuilder(Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder other) {
    if (other == null) {
      return new Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder();
    } else {
      return new Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder(other);
    }
  }

  /**
   * Creates a new PartsMetadataInfo RecordBuilder by copying an existing PartsMetadataInfo instance.
   * @param other The existing instance to copy.
   * @return A new PartsMetadataInfo RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder newBuilder(Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo other) {
    if (other == null) {
      return new Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder();
    } else {
      return new Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder(other);
    }
  }

  /**
   * RecordBuilder for PartsMetadataInfo instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PartsMetadataInfo>
    implements org.apache.avro.data.RecordBuilder<PartsMetadataInfo> {

    private java.lang.CharSequence uri;
    private java.lang.CharSequence name;
    private Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord index;
    private Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord.Builder indexBuilder;
    private java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> customData;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uri)) {
        this.uri = data().deepCopy(fields()[0].schema(), other.uri);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.index)) {
        this.index = data().deepCopy(fields()[2].schema(), other.index);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasIndexBuilder()) {
        this.indexBuilder = Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord.newBuilder(other.getIndexBuilder());
      }
      if (isValidValue(fields()[3], other.customData)) {
        this.customData = data().deepCopy(fields()[3].schema(), other.customData);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing PartsMetadataInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.uri)) {
        this.uri = data().deepCopy(fields()[0].schema(), other.uri);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.index)) {
        this.index = data().deepCopy(fields()[2].schema(), other.index);
        fieldSetFlags()[2] = true;
      }
      this.indexBuilder = null;
      if (isValidValue(fields()[3], other.customData)) {
        this.customData = data().deepCopy(fields()[3].schema(), other.customData);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'uri' field.
      * @return The value.
      */
    public java.lang.CharSequence getUri() {
      return uri;
    }


    /**
      * Sets the value of the 'uri' field.
      * @param value The value of 'uri'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder setUri(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.uri = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uri' field has been set.
      * @return True if the 'uri' field has been set, false otherwise.
      */
    public boolean hasUri() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uri' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder clearUri() {
      uri = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'index' field.
      * @return The value.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord getIndex() {
      return index;
    }


    /**
      * Sets the value of the 'index' field.
      * @param value The value of 'index'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder setIndex(Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord value) {
      validate(fields()[2], value);
      this.indexBuilder = null;
      this.index = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'index' field has been set.
      * @return True if the 'index' field has been set, false otherwise.
      */
    public boolean hasIndex() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'index' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord.Builder getIndexBuilder() {
      if (indexBuilder == null) {
        if (hasIndex()) {
          setIndexBuilder(Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord.newBuilder(index));
        } else {
          setIndexBuilder(Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord.newBuilder());
        }
      }
      return indexBuilder;
    }

    /**
     * Sets the Builder instance for the 'index' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder setIndexBuilder(Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord.Builder value) {
      clearIndex();
      indexBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'index' field has an active Builder instance
     * @return True if the 'index' field has an active Builder instance
     */
    public boolean hasIndexBuilder() {
      return indexBuilder != null;
    }

    /**
      * Clears the value of the 'index' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder clearIndex() {
      index = null;
      indexBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'customData' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> getCustomData() {
      return customData;
    }


    /**
      * Sets the value of the 'customData' field.
      * @param value The value of 'customData'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder setCustomData(java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> value) {
      validate(fields()[3], value);
      this.customData = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'customData' field has been set.
      * @return True if the 'customData' field has been set, false otherwise.
      */
    public boolean hasCustomData() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'customData' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.Object.PartsMetadataInfo.Builder clearCustomData() {
      customData = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PartsMetadataInfo build() {
      try {
        PartsMetadataInfo record = new PartsMetadataInfo();
        record.uri = fieldSetFlags()[0] ? this.uri : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        if (indexBuilder != null) {
          try {
            record.index = this.indexBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("index"));
            throw e;
          }
        } else {
          record.index = fieldSetFlags()[2] ? this.index : (Energistics.Etp.v12.Datatypes.ChannelData.IndexMetadataRecord) defaultValue(fields()[2]);
        }
        record.customData = fieldSetFlags()[3] ? this.customData : (java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue>) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PartsMetadataInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<PartsMetadataInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PartsMetadataInfo>
    READER$ = (org.apache.avro.io.DatumReader<PartsMetadataInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










