/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Etp.v12.Datatypes;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AnySubarray extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1942413803779884934L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AnySubarray\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"fields\":[{\"name\":\"start\",\"type\":\"long\"},{\"name\":\"slice\",\"type\":{\"type\":\"record\",\"name\":\"AnyArray\",\"fields\":[{\"name\":\"item\",\"type\":[{\"type\":\"record\",\"name\":\"ArrayOfBoolean\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"boolean\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfBoolean\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfInt\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"int\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfInt\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfLong\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"long\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfLong\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfFloat\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"float\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfFloat\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfDouble\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfDouble\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfString\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfString\",\"depends\":[]},\"bytes\"]}],\"fullName\":\"Energistics.Etp.v12.Datatypes.AnyArray\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ArrayOfBoolean\",\"Energistics.Etp.v12.Datatypes.ArrayOfInt\",\"Energistics.Etp.v12.Datatypes.ArrayOfLong\",\"Energistics.Etp.v12.Datatypes.ArrayOfFloat\",\"Energistics.Etp.v12.Datatypes.ArrayOfDouble\",\"Energistics.Etp.v12.Datatypes.ArrayOfString\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.AnySubarray\",\"depends\":[\"Energistics.Etp.v12.Datatypes.AnyArray\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AnySubarray> ENCODER =
      new BinaryMessageEncoder<AnySubarray>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AnySubarray> DECODER =
      new BinaryMessageDecoder<AnySubarray>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AnySubarray> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AnySubarray> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AnySubarray> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AnySubarray>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AnySubarray to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AnySubarray from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AnySubarray instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AnySubarray fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long start;
   private Energistics.Etp.v12.Datatypes.AnyArray slice;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AnySubarray() {}

  /**
   * All-args constructor.
   * @param start The new value for start
   * @param slice The new value for slice
   */
  public AnySubarray(java.lang.Long start, Energistics.Etp.v12.Datatypes.AnyArray slice) {
    this.start = start;
    this.slice = slice;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return start;
    case 1: return slice;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: start = (java.lang.Long)value$; break;
    case 1: slice = (Energistics.Etp.v12.Datatypes.AnyArray)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'start' field.
   * @return The value of the 'start' field.
   */
  public long getStart() {
    return start;
  }


  /**
   * Sets the value of the 'start' field.
   * @param value the value to set.
   */
  public void setStart(long value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'slice' field.
   * @return The value of the 'slice' field.
   */
  public Energistics.Etp.v12.Datatypes.AnyArray getSlice() {
    return slice;
  }


  /**
   * Sets the value of the 'slice' field.
   * @param value the value to set.
   */
  public void setSlice(Energistics.Etp.v12.Datatypes.AnyArray value) {
    this.slice = value;
  }

  /**
   * Creates a new AnySubarray RecordBuilder.
   * @return A new AnySubarray RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.AnySubarray.Builder newBuilder() {
    return new Energistics.Etp.v12.Datatypes.AnySubarray.Builder();
  }

  /**
   * Creates a new AnySubarray RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AnySubarray RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.AnySubarray.Builder newBuilder(Energistics.Etp.v12.Datatypes.AnySubarray.Builder other) {
    if (other == null) {
      return new Energistics.Etp.v12.Datatypes.AnySubarray.Builder();
    } else {
      return new Energistics.Etp.v12.Datatypes.AnySubarray.Builder(other);
    }
  }

  /**
   * Creates a new AnySubarray RecordBuilder by copying an existing AnySubarray instance.
   * @param other The existing instance to copy.
   * @return A new AnySubarray RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.AnySubarray.Builder newBuilder(Energistics.Etp.v12.Datatypes.AnySubarray other) {
    if (other == null) {
      return new Energistics.Etp.v12.Datatypes.AnySubarray.Builder();
    } else {
      return new Energistics.Etp.v12.Datatypes.AnySubarray.Builder(other);
    }
  }

  /**
   * RecordBuilder for AnySubarray instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AnySubarray>
    implements org.apache.avro.data.RecordBuilder<AnySubarray> {

    private long start;
    private Energistics.Etp.v12.Datatypes.AnyArray slice;
    private Energistics.Etp.v12.Datatypes.AnyArray.Builder sliceBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Energistics.Etp.v12.Datatypes.AnySubarray.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.start)) {
        this.start = data().deepCopy(fields()[0].schema(), other.start);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.slice)) {
        this.slice = data().deepCopy(fields()[1].schema(), other.slice);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasSliceBuilder()) {
        this.sliceBuilder = Energistics.Etp.v12.Datatypes.AnyArray.newBuilder(other.getSliceBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing AnySubarray instance
     * @param other The existing instance to copy.
     */
    private Builder(Energistics.Etp.v12.Datatypes.AnySubarray other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.start)) {
        this.start = data().deepCopy(fields()[0].schema(), other.start);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.slice)) {
        this.slice = data().deepCopy(fields()[1].schema(), other.slice);
        fieldSetFlags()[1] = true;
      }
      this.sliceBuilder = null;
    }

    /**
      * Gets the value of the 'start' field.
      * @return The value.
      */
    public long getStart() {
      return start;
    }


    /**
      * Sets the value of the 'start' field.
      * @param value The value of 'start'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.AnySubarray.Builder setStart(long value) {
      validate(fields()[0], value);
      this.start = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'start' field has been set.
      * @return True if the 'start' field has been set, false otherwise.
      */
    public boolean hasStart() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'start' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.AnySubarray.Builder clearStart() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'slice' field.
      * @return The value.
      */
    public Energistics.Etp.v12.Datatypes.AnyArray getSlice() {
      return slice;
    }


    /**
      * Sets the value of the 'slice' field.
      * @param value The value of 'slice'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.AnySubarray.Builder setSlice(Energistics.Etp.v12.Datatypes.AnyArray value) {
      validate(fields()[1], value);
      this.sliceBuilder = null;
      this.slice = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'slice' field has been set.
      * @return True if the 'slice' field has been set, false otherwise.
      */
    public boolean hasSlice() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'slice' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public Energistics.Etp.v12.Datatypes.AnyArray.Builder getSliceBuilder() {
      if (sliceBuilder == null) {
        if (hasSlice()) {
          setSliceBuilder(Energistics.Etp.v12.Datatypes.AnyArray.newBuilder(slice));
        } else {
          setSliceBuilder(Energistics.Etp.v12.Datatypes.AnyArray.newBuilder());
        }
      }
      return sliceBuilder;
    }

    /**
     * Sets the Builder instance for the 'slice' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public Energistics.Etp.v12.Datatypes.AnySubarray.Builder setSliceBuilder(Energistics.Etp.v12.Datatypes.AnyArray.Builder value) {
      clearSlice();
      sliceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'slice' field has an active Builder instance
     * @return True if the 'slice' field has an active Builder instance
     */
    public boolean hasSliceBuilder() {
      return sliceBuilder != null;
    }

    /**
      * Clears the value of the 'slice' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.AnySubarray.Builder clearSlice() {
      slice = null;
      sliceBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AnySubarray build() {
      try {
        AnySubarray record = new AnySubarray();
        record.start = fieldSetFlags()[0] ? this.start : (java.lang.Long) defaultValue(fields()[0]);
        if (sliceBuilder != null) {
          try {
            record.slice = this.sliceBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("slice"));
            throw e;
          }
        } else {
          record.slice = fieldSetFlags()[1] ? this.slice : (Energistics.Etp.v12.Datatypes.AnyArray) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AnySubarray>
    WRITER$ = (org.apache.avro.io.DatumWriter<AnySubarray>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AnySubarray>
    READER$ = (org.apache.avro.io.DatumReader<AnySubarray>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










