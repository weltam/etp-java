/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Etp.v12.Datatypes.ChannelData;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class TruncateInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8540629120647685623L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TruncateInfo\",\"namespace\":\"Energistics.Etp.v12.Datatypes.ChannelData\",\"fields\":[{\"name\":\"channelId\",\"type\":\"long\"},{\"name\":\"newEndIndex\",\"type\":{\"type\":\"record\",\"name\":\"IndexValue\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"long\",\"double\",{\"type\":\"record\",\"name\":\"PassIndexedDepth\",\"namespace\":\"Energistics.Etp.v12.Datatypes.ChannelData\",\"fields\":[{\"name\":\"pass\",\"type\":\"long\"},{\"name\":\"direction\",\"type\":{\"type\":\"enum\",\"name\":\"PassDirection\",\"symbols\":[\"Up\",\"HoldingSteady\",\"Down\"],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.PassDirection\",\"depends\":[]}},{\"name\":\"depth\",\"type\":\"double\"}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.PassIndexedDepth\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ChannelData.PassDirection\"]}]}],\"fullName\":\"Energistics.Etp.v12.Datatypes.IndexValue\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ChannelData.PassIndexedDepth\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo\",\"depends\":[\"Energistics.Etp.v12.Datatypes.IndexValue\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TruncateInfo> ENCODER =
      new BinaryMessageEncoder<TruncateInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TruncateInfo> DECODER =
      new BinaryMessageDecoder<TruncateInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TruncateInfo> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TruncateInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TruncateInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TruncateInfo>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TruncateInfo to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TruncateInfo from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TruncateInfo instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TruncateInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long channelId;
   private Energistics.Etp.v12.Datatypes.IndexValue newEndIndex;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TruncateInfo() {}

  /**
   * All-args constructor.
   * @param channelId The new value for channelId
   * @param newEndIndex The new value for newEndIndex
   */
  public TruncateInfo(java.lang.Long channelId, Energistics.Etp.v12.Datatypes.IndexValue newEndIndex) {
    this.channelId = channelId;
    this.newEndIndex = newEndIndex;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return channelId;
    case 1: return newEndIndex;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: channelId = (java.lang.Long)value$; break;
    case 1: newEndIndex = (Energistics.Etp.v12.Datatypes.IndexValue)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'channelId' field.
   * @return The value of the 'channelId' field.
   */
  public long getChannelId() {
    return channelId;
  }


  /**
   * Sets the value of the 'channelId' field.
   * @param value the value to set.
   */
  public void setChannelId(long value) {
    this.channelId = value;
  }

  /**
   * Gets the value of the 'newEndIndex' field.
   * @return The value of the 'newEndIndex' field.
   */
  public Energistics.Etp.v12.Datatypes.IndexValue getNewEndIndex() {
    return newEndIndex;
  }


  /**
   * Sets the value of the 'newEndIndex' field.
   * @param value the value to set.
   */
  public void setNewEndIndex(Energistics.Etp.v12.Datatypes.IndexValue value) {
    this.newEndIndex = value;
  }

  /**
   * Creates a new TruncateInfo RecordBuilder.
   * @return A new TruncateInfo RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder newBuilder() {
    return new Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder();
  }

  /**
   * Creates a new TruncateInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TruncateInfo RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder newBuilder(Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder other) {
    if (other == null) {
      return new Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder();
    } else {
      return new Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder(other);
    }
  }

  /**
   * Creates a new TruncateInfo RecordBuilder by copying an existing TruncateInfo instance.
   * @param other The existing instance to copy.
   * @return A new TruncateInfo RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder newBuilder(Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo other) {
    if (other == null) {
      return new Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder();
    } else {
      return new Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder(other);
    }
  }

  /**
   * RecordBuilder for TruncateInfo instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TruncateInfo>
    implements org.apache.avro.data.RecordBuilder<TruncateInfo> {

    private long channelId;
    private Energistics.Etp.v12.Datatypes.IndexValue newEndIndex;
    private Energistics.Etp.v12.Datatypes.IndexValue.Builder newEndIndexBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.channelId)) {
        this.channelId = data().deepCopy(fields()[0].schema(), other.channelId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.newEndIndex)) {
        this.newEndIndex = data().deepCopy(fields()[1].schema(), other.newEndIndex);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasNewEndIndexBuilder()) {
        this.newEndIndexBuilder = Energistics.Etp.v12.Datatypes.IndexValue.newBuilder(other.getNewEndIndexBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing TruncateInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.channelId)) {
        this.channelId = data().deepCopy(fields()[0].schema(), other.channelId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.newEndIndex)) {
        this.newEndIndex = data().deepCopy(fields()[1].schema(), other.newEndIndex);
        fieldSetFlags()[1] = true;
      }
      this.newEndIndexBuilder = null;
    }

    /**
      * Gets the value of the 'channelId' field.
      * @return The value.
      */
    public long getChannelId() {
      return channelId;
    }


    /**
      * Sets the value of the 'channelId' field.
      * @param value The value of 'channelId'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder setChannelId(long value) {
      validate(fields()[0], value);
      this.channelId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'channelId' field has been set.
      * @return True if the 'channelId' field has been set, false otherwise.
      */
    public boolean hasChannelId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'channelId' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder clearChannelId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'newEndIndex' field.
      * @return The value.
      */
    public Energistics.Etp.v12.Datatypes.IndexValue getNewEndIndex() {
      return newEndIndex;
    }


    /**
      * Sets the value of the 'newEndIndex' field.
      * @param value The value of 'newEndIndex'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder setNewEndIndex(Energistics.Etp.v12.Datatypes.IndexValue value) {
      validate(fields()[1], value);
      this.newEndIndexBuilder = null;
      this.newEndIndex = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'newEndIndex' field has been set.
      * @return True if the 'newEndIndex' field has been set, false otherwise.
      */
    public boolean hasNewEndIndex() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'newEndIndex' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public Energistics.Etp.v12.Datatypes.IndexValue.Builder getNewEndIndexBuilder() {
      if (newEndIndexBuilder == null) {
        if (hasNewEndIndex()) {
          setNewEndIndexBuilder(Energistics.Etp.v12.Datatypes.IndexValue.newBuilder(newEndIndex));
        } else {
          setNewEndIndexBuilder(Energistics.Etp.v12.Datatypes.IndexValue.newBuilder());
        }
      }
      return newEndIndexBuilder;
    }

    /**
     * Sets the Builder instance for the 'newEndIndex' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder setNewEndIndexBuilder(Energistics.Etp.v12.Datatypes.IndexValue.Builder value) {
      clearNewEndIndex();
      newEndIndexBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'newEndIndex' field has an active Builder instance
     * @return True if the 'newEndIndex' field has an active Builder instance
     */
    public boolean hasNewEndIndexBuilder() {
      return newEndIndexBuilder != null;
    }

    /**
      * Clears the value of the 'newEndIndex' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.TruncateInfo.Builder clearNewEndIndex() {
      newEndIndex = null;
      newEndIndexBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TruncateInfo build() {
      try {
        TruncateInfo record = new TruncateInfo();
        record.channelId = fieldSetFlags()[0] ? this.channelId : (java.lang.Long) defaultValue(fields()[0]);
        if (newEndIndexBuilder != null) {
          try {
            record.newEndIndex = this.newEndIndexBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("newEndIndex"));
            throw e;
          }
        } else {
          record.newEndIndex = fieldSetFlags()[1] ? this.newEndIndex : (Energistics.Etp.v12.Datatypes.IndexValue) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TruncateInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<TruncateInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TruncateInfo>
    READER$ = (org.apache.avro.io.DatumReader<TruncateInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










