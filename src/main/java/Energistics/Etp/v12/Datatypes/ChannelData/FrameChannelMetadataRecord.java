/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Etp.v12.Datatypes.ChannelData;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class FrameChannelMetadataRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7499742241783389577L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FrameChannelMetadataRecord\",\"namespace\":\"Energistics.Etp.v12.Datatypes.ChannelData\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"channelName\",\"type\":\"string\"},{\"name\":\"dataKind\",\"type\":{\"type\":\"enum\",\"name\":\"ChannelDataKind\",\"symbols\":[\"DateTime\",\"ElapsedTime\",\"MeasuredDepth\",\"PassIndexedDepth\",\"TrueVerticalDepth\",\"typeBoolean\",\"typeInt\",\"typeLong\",\"typeFloat\",\"typeDouble\",\"typeString\",\"typeBytes\"],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind\",\"depends\":[]}},{\"name\":\"uom\",\"type\":\"string\"},{\"name\":\"depthDatum\",\"type\":\"string\"},{\"name\":\"channelPropertyKindUri\",\"type\":\"string\"},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"ActiveStatusKind\",\"namespace\":\"Energistics.Etp.v12.Datatypes.Object\",\"symbols\":[\"Active\",\"Inactive\"],\"fullName\":\"Energistics.Etp.v12.Datatypes.Object.ActiveStatusKind\",\"depends\":[]}},{\"name\":\"source\",\"type\":\"string\"},{\"name\":\"axisVectorLengths\",\"type\":{\"type\":\"array\",\"items\":\"int\"}},{\"name\":\"attributeMetadata\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AttributeMetadataRecord\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"fields\":[{\"name\":\"attributeId\",\"type\":\"int\"},{\"name\":\"attributeName\",\"type\":\"string\"},{\"name\":\"dataKind\",\"type\":\"Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind\"},{\"name\":\"uom\",\"type\":\"string\"},{\"name\":\"depthDatum\",\"type\":\"string\"},{\"name\":\"attributePropertyKindUri\",\"type\":\"string\"},{\"name\":\"axisVectorLengths\",\"type\":{\"type\":\"array\",\"items\":\"int\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.AttributeMetadataRecord\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind\"]}},\"default\":[]},{\"name\":\"customData\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"DataValue\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"boolean\",\"int\",\"long\",\"float\",\"double\",\"string\",{\"type\":\"record\",\"name\":\"ArrayOfBoolean\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"boolean\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfBoolean\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfNullableBoolean\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"boolean\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfNullableBoolean\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfInt\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"int\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfInt\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfNullableInt\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"int\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfNullableInt\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfLong\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"long\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfLong\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfNullableLong\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"long\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfNullableLong\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfFloat\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"float\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfFloat\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfDouble\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfDouble\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfString\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfString\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfBytes\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"bytes\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfBytes\",\"depends\":[]},\"bytes\",{\"type\":\"record\",\"name\":\"AnySparseArray\",\"fields\":[{\"name\":\"slices\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AnySubarray\",\"fields\":[{\"name\":\"start\",\"type\":\"long\"},{\"name\":\"slice\",\"type\":{\"type\":\"record\",\"name\":\"AnyArray\",\"fields\":[{\"name\":\"item\",\"type\":[\"ArrayOfBoolean\",\"ArrayOfInt\",\"ArrayOfLong\",\"ArrayOfFloat\",\"ArrayOfDouble\",\"ArrayOfString\",\"bytes\"]}],\"fullName\":\"Energistics.Etp.v12.Datatypes.AnyArray\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ArrayOfBoolean\",\"Energistics.Etp.v12.Datatypes.ArrayOfInt\",\"Energistics.Etp.v12.Datatypes.ArrayOfLong\",\"Energistics.Etp.v12.Datatypes.ArrayOfFloat\",\"Energistics.Etp.v12.Datatypes.ArrayOfDouble\",\"Energistics.Etp.v12.Datatypes.ArrayOfString\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.AnySubarray\",\"depends\":[\"Energistics.Etp.v12.Datatypes.AnyArray\"]}}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.AnySparseArray\",\"depends\":[\"Energistics.Etp.v12.Datatypes.AnySubarray\"]}]}],\"fullName\":\"Energistics.Etp.v12.Datatypes.DataValue\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ArrayOfBoolean\",\"Energistics.Etp.v12.Datatypes.ArrayOfNullableBoolean\",\"Energistics.Etp.v12.Datatypes.ArrayOfInt\",\"Energistics.Etp.v12.Datatypes.ArrayOfNullableInt\",\"Energistics.Etp.v12.Datatypes.ArrayOfLong\",\"Energistics.Etp.v12.Datatypes.ArrayOfNullableLong\",\"Energistics.Etp.v12.Datatypes.ArrayOfFloat\",\"Energistics.Etp.v12.Datatypes.ArrayOfDouble\",\"Energistics.Etp.v12.Datatypes.ArrayOfString\",\"Energistics.Etp.v12.Datatypes.ArrayOfBytes\",\"Energistics.Etp.v12.Datatypes.AnySparseArray\"]}},\"default\":{}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind\",\"Energistics.Etp.v12.Datatypes.Object.ActiveStatusKind\",\"Energistics.Etp.v12.Datatypes.AttributeMetadataRecord\",\"Energistics.Etp.v12.Datatypes.DataValue\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FrameChannelMetadataRecord> ENCODER =
      new BinaryMessageEncoder<FrameChannelMetadataRecord>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FrameChannelMetadataRecord> DECODER =
      new BinaryMessageDecoder<FrameChannelMetadataRecord>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<FrameChannelMetadataRecord> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<FrameChannelMetadataRecord> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<FrameChannelMetadataRecord> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FrameChannelMetadataRecord>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this FrameChannelMetadataRecord to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a FrameChannelMetadataRecord from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a FrameChannelMetadataRecord instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static FrameChannelMetadataRecord fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence uri;
   private java.lang.CharSequence channelName;
   private Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind dataKind;
   private java.lang.CharSequence uom;
   private java.lang.CharSequence depthDatum;
   private java.lang.CharSequence channelPropertyKindUri;
   private Energistics.Etp.v12.Datatypes.Object.ActiveStatusKind status;
   private java.lang.CharSequence source;
   private java.util.List<java.lang.Integer> axisVectorLengths;
   private java.util.List<Energistics.Etp.v12.Datatypes.AttributeMetadataRecord> attributeMetadata;
   private java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> customData;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FrameChannelMetadataRecord() {}

  /**
   * All-args constructor.
   * @param uri The new value for uri
   * @param channelName The new value for channelName
   * @param dataKind The new value for dataKind
   * @param uom The new value for uom
   * @param depthDatum The new value for depthDatum
   * @param channelPropertyKindUri The new value for channelPropertyKindUri
   * @param status The new value for status
   * @param source The new value for source
   * @param axisVectorLengths The new value for axisVectorLengths
   * @param attributeMetadata The new value for attributeMetadata
   * @param customData The new value for customData
   */
  public FrameChannelMetadataRecord(java.lang.CharSequence uri, java.lang.CharSequence channelName, Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind dataKind, java.lang.CharSequence uom, java.lang.CharSequence depthDatum, java.lang.CharSequence channelPropertyKindUri, Energistics.Etp.v12.Datatypes.Object.ActiveStatusKind status, java.lang.CharSequence source, java.util.List<java.lang.Integer> axisVectorLengths, java.util.List<Energistics.Etp.v12.Datatypes.AttributeMetadataRecord> attributeMetadata, java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> customData) {
    this.uri = uri;
    this.channelName = channelName;
    this.dataKind = dataKind;
    this.uom = uom;
    this.depthDatum = depthDatum;
    this.channelPropertyKindUri = channelPropertyKindUri;
    this.status = status;
    this.source = source;
    this.axisVectorLengths = axisVectorLengths;
    this.attributeMetadata = attributeMetadata;
    this.customData = customData;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uri;
    case 1: return channelName;
    case 2: return dataKind;
    case 3: return uom;
    case 4: return depthDatum;
    case 5: return channelPropertyKindUri;
    case 6: return status;
    case 7: return source;
    case 8: return axisVectorLengths;
    case 9: return attributeMetadata;
    case 10: return customData;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uri = (java.lang.CharSequence)value$; break;
    case 1: channelName = (java.lang.CharSequence)value$; break;
    case 2: dataKind = (Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind)value$; break;
    case 3: uom = (java.lang.CharSequence)value$; break;
    case 4: depthDatum = (java.lang.CharSequence)value$; break;
    case 5: channelPropertyKindUri = (java.lang.CharSequence)value$; break;
    case 6: status = (Energistics.Etp.v12.Datatypes.Object.ActiveStatusKind)value$; break;
    case 7: source = (java.lang.CharSequence)value$; break;
    case 8: axisVectorLengths = (java.util.List<java.lang.Integer>)value$; break;
    case 9: attributeMetadata = (java.util.List<Energistics.Etp.v12.Datatypes.AttributeMetadataRecord>)value$; break;
    case 10: customData = (java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'uri' field.
   * @return The value of the 'uri' field.
   */
  public java.lang.CharSequence getUri() {
    return uri;
  }


  /**
   * Sets the value of the 'uri' field.
   * @param value the value to set.
   */
  public void setUri(java.lang.CharSequence value) {
    this.uri = value;
  }

  /**
   * Gets the value of the 'channelName' field.
   * @return The value of the 'channelName' field.
   */
  public java.lang.CharSequence getChannelName() {
    return channelName;
  }


  /**
   * Sets the value of the 'channelName' field.
   * @param value the value to set.
   */
  public void setChannelName(java.lang.CharSequence value) {
    this.channelName = value;
  }

  /**
   * Gets the value of the 'dataKind' field.
   * @return The value of the 'dataKind' field.
   */
  public Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind getDataKind() {
    return dataKind;
  }


  /**
   * Sets the value of the 'dataKind' field.
   * @param value the value to set.
   */
  public void setDataKind(Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind value) {
    this.dataKind = value;
  }

  /**
   * Gets the value of the 'uom' field.
   * @return The value of the 'uom' field.
   */
  public java.lang.CharSequence getUom() {
    return uom;
  }


  /**
   * Sets the value of the 'uom' field.
   * @param value the value to set.
   */
  public void setUom(java.lang.CharSequence value) {
    this.uom = value;
  }

  /**
   * Gets the value of the 'depthDatum' field.
   * @return The value of the 'depthDatum' field.
   */
  public java.lang.CharSequence getDepthDatum() {
    return depthDatum;
  }


  /**
   * Sets the value of the 'depthDatum' field.
   * @param value the value to set.
   */
  public void setDepthDatum(java.lang.CharSequence value) {
    this.depthDatum = value;
  }

  /**
   * Gets the value of the 'channelPropertyKindUri' field.
   * @return The value of the 'channelPropertyKindUri' field.
   */
  public java.lang.CharSequence getChannelPropertyKindUri() {
    return channelPropertyKindUri;
  }


  /**
   * Sets the value of the 'channelPropertyKindUri' field.
   * @param value the value to set.
   */
  public void setChannelPropertyKindUri(java.lang.CharSequence value) {
    this.channelPropertyKindUri = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public Energistics.Etp.v12.Datatypes.Object.ActiveStatusKind getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(Energistics.Etp.v12.Datatypes.Object.ActiveStatusKind value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public java.lang.CharSequence getSource() {
    return source;
  }


  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'axisVectorLengths' field.
   * @return The value of the 'axisVectorLengths' field.
   */
  public java.util.List<java.lang.Integer> getAxisVectorLengths() {
    return axisVectorLengths;
  }


  /**
   * Sets the value of the 'axisVectorLengths' field.
   * @param value the value to set.
   */
  public void setAxisVectorLengths(java.util.List<java.lang.Integer> value) {
    this.axisVectorLengths = value;
  }

  /**
   * Gets the value of the 'attributeMetadata' field.
   * @return The value of the 'attributeMetadata' field.
   */
  public java.util.List<Energistics.Etp.v12.Datatypes.AttributeMetadataRecord> getAttributeMetadata() {
    return attributeMetadata;
  }


  /**
   * Sets the value of the 'attributeMetadata' field.
   * @param value the value to set.
   */
  public void setAttributeMetadata(java.util.List<Energistics.Etp.v12.Datatypes.AttributeMetadataRecord> value) {
    this.attributeMetadata = value;
  }

  /**
   * Gets the value of the 'customData' field.
   * @return The value of the 'customData' field.
   */
  public java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> getCustomData() {
    return customData;
  }


  /**
   * Sets the value of the 'customData' field.
   * @param value the value to set.
   */
  public void setCustomData(java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> value) {
    this.customData = value;
  }

  /**
   * Creates a new FrameChannelMetadataRecord RecordBuilder.
   * @return A new FrameChannelMetadataRecord RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder newBuilder() {
    return new Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder();
  }

  /**
   * Creates a new FrameChannelMetadataRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FrameChannelMetadataRecord RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder newBuilder(Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder other) {
    if (other == null) {
      return new Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder();
    } else {
      return new Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder(other);
    }
  }

  /**
   * Creates a new FrameChannelMetadataRecord RecordBuilder by copying an existing FrameChannelMetadataRecord instance.
   * @param other The existing instance to copy.
   * @return A new FrameChannelMetadataRecord RecordBuilder
   */
  public static Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder newBuilder(Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord other) {
    if (other == null) {
      return new Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder();
    } else {
      return new Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder(other);
    }
  }

  /**
   * RecordBuilder for FrameChannelMetadataRecord instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FrameChannelMetadataRecord>
    implements org.apache.avro.data.RecordBuilder<FrameChannelMetadataRecord> {

    private java.lang.CharSequence uri;
    private java.lang.CharSequence channelName;
    private Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind dataKind;
    private java.lang.CharSequence uom;
    private java.lang.CharSequence depthDatum;
    private java.lang.CharSequence channelPropertyKindUri;
    private Energistics.Etp.v12.Datatypes.Object.ActiveStatusKind status;
    private java.lang.CharSequence source;
    private java.util.List<java.lang.Integer> axisVectorLengths;
    private java.util.List<Energistics.Etp.v12.Datatypes.AttributeMetadataRecord> attributeMetadata;
    private java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> customData;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uri)) {
        this.uri = data().deepCopy(fields()[0].schema(), other.uri);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.channelName)) {
        this.channelName = data().deepCopy(fields()[1].schema(), other.channelName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.dataKind)) {
        this.dataKind = data().deepCopy(fields()[2].schema(), other.dataKind);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.uom)) {
        this.uom = data().deepCopy(fields()[3].schema(), other.uom);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.depthDatum)) {
        this.depthDatum = data().deepCopy(fields()[4].schema(), other.depthDatum);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.channelPropertyKindUri)) {
        this.channelPropertyKindUri = data().deepCopy(fields()[5].schema(), other.channelPropertyKindUri);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.status)) {
        this.status = data().deepCopy(fields()[6].schema(), other.status);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.source)) {
        this.source = data().deepCopy(fields()[7].schema(), other.source);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.axisVectorLengths)) {
        this.axisVectorLengths = data().deepCopy(fields()[8].schema(), other.axisVectorLengths);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.attributeMetadata)) {
        this.attributeMetadata = data().deepCopy(fields()[9].schema(), other.attributeMetadata);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.customData)) {
        this.customData = data().deepCopy(fields()[10].schema(), other.customData);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing FrameChannelMetadataRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.uri)) {
        this.uri = data().deepCopy(fields()[0].schema(), other.uri);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.channelName)) {
        this.channelName = data().deepCopy(fields()[1].schema(), other.channelName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dataKind)) {
        this.dataKind = data().deepCopy(fields()[2].schema(), other.dataKind);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.uom)) {
        this.uom = data().deepCopy(fields()[3].schema(), other.uom);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.depthDatum)) {
        this.depthDatum = data().deepCopy(fields()[4].schema(), other.depthDatum);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.channelPropertyKindUri)) {
        this.channelPropertyKindUri = data().deepCopy(fields()[5].schema(), other.channelPropertyKindUri);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.status)) {
        this.status = data().deepCopy(fields()[6].schema(), other.status);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.source)) {
        this.source = data().deepCopy(fields()[7].schema(), other.source);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.axisVectorLengths)) {
        this.axisVectorLengths = data().deepCopy(fields()[8].schema(), other.axisVectorLengths);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.attributeMetadata)) {
        this.attributeMetadata = data().deepCopy(fields()[9].schema(), other.attributeMetadata);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.customData)) {
        this.customData = data().deepCopy(fields()[10].schema(), other.customData);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'uri' field.
      * @return The value.
      */
    public java.lang.CharSequence getUri() {
      return uri;
    }


    /**
      * Sets the value of the 'uri' field.
      * @param value The value of 'uri'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder setUri(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.uri = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uri' field has been set.
      * @return True if the 'uri' field has been set, false otherwise.
      */
    public boolean hasUri() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uri' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder clearUri() {
      uri = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'channelName' field.
      * @return The value.
      */
    public java.lang.CharSequence getChannelName() {
      return channelName;
    }


    /**
      * Sets the value of the 'channelName' field.
      * @param value The value of 'channelName'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder setChannelName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.channelName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'channelName' field has been set.
      * @return True if the 'channelName' field has been set, false otherwise.
      */
    public boolean hasChannelName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'channelName' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder clearChannelName() {
      channelName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataKind' field.
      * @return The value.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind getDataKind() {
      return dataKind;
    }


    /**
      * Sets the value of the 'dataKind' field.
      * @param value The value of 'dataKind'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder setDataKind(Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind value) {
      validate(fields()[2], value);
      this.dataKind = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'dataKind' field has been set.
      * @return True if the 'dataKind' field has been set, false otherwise.
      */
    public boolean hasDataKind() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'dataKind' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder clearDataKind() {
      dataKind = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'uom' field.
      * @return The value.
      */
    public java.lang.CharSequence getUom() {
      return uom;
    }


    /**
      * Sets the value of the 'uom' field.
      * @param value The value of 'uom'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder setUom(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.uom = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'uom' field has been set.
      * @return True if the 'uom' field has been set, false otherwise.
      */
    public boolean hasUom() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'uom' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder clearUom() {
      uom = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'depthDatum' field.
      * @return The value.
      */
    public java.lang.CharSequence getDepthDatum() {
      return depthDatum;
    }


    /**
      * Sets the value of the 'depthDatum' field.
      * @param value The value of 'depthDatum'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder setDepthDatum(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.depthDatum = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'depthDatum' field has been set.
      * @return True if the 'depthDatum' field has been set, false otherwise.
      */
    public boolean hasDepthDatum() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'depthDatum' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder clearDepthDatum() {
      depthDatum = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'channelPropertyKindUri' field.
      * @return The value.
      */
    public java.lang.CharSequence getChannelPropertyKindUri() {
      return channelPropertyKindUri;
    }


    /**
      * Sets the value of the 'channelPropertyKindUri' field.
      * @param value The value of 'channelPropertyKindUri'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder setChannelPropertyKindUri(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.channelPropertyKindUri = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'channelPropertyKindUri' field has been set.
      * @return True if the 'channelPropertyKindUri' field has been set, false otherwise.
      */
    public boolean hasChannelPropertyKindUri() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'channelPropertyKindUri' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder clearChannelPropertyKindUri() {
      channelPropertyKindUri = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public Energistics.Etp.v12.Datatypes.Object.ActiveStatusKind getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder setStatus(Energistics.Etp.v12.Datatypes.Object.ActiveStatusKind value) {
      validate(fields()[6], value);
      this.status = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder clearStatus() {
      status = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public java.lang.CharSequence getSource() {
      return source;
    }


    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.source = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder clearSource() {
      source = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'axisVectorLengths' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getAxisVectorLengths() {
      return axisVectorLengths;
    }


    /**
      * Sets the value of the 'axisVectorLengths' field.
      * @param value The value of 'axisVectorLengths'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder setAxisVectorLengths(java.util.List<java.lang.Integer> value) {
      validate(fields()[8], value);
      this.axisVectorLengths = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'axisVectorLengths' field has been set.
      * @return True if the 'axisVectorLengths' field has been set, false otherwise.
      */
    public boolean hasAxisVectorLengths() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'axisVectorLengths' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder clearAxisVectorLengths() {
      axisVectorLengths = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'attributeMetadata' field.
      * @return The value.
      */
    public java.util.List<Energistics.Etp.v12.Datatypes.AttributeMetadataRecord> getAttributeMetadata() {
      return attributeMetadata;
    }


    /**
      * Sets the value of the 'attributeMetadata' field.
      * @param value The value of 'attributeMetadata'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder setAttributeMetadata(java.util.List<Energistics.Etp.v12.Datatypes.AttributeMetadataRecord> value) {
      validate(fields()[9], value);
      this.attributeMetadata = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'attributeMetadata' field has been set.
      * @return True if the 'attributeMetadata' field has been set, false otherwise.
      */
    public boolean hasAttributeMetadata() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'attributeMetadata' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder clearAttributeMetadata() {
      attributeMetadata = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'customData' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> getCustomData() {
      return customData;
    }


    /**
      * Sets the value of the 'customData' field.
      * @param value The value of 'customData'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder setCustomData(java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> value) {
      validate(fields()[10], value);
      this.customData = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'customData' field has been set.
      * @return True if the 'customData' field has been set, false otherwise.
      */
    public boolean hasCustomData() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'customData' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Datatypes.ChannelData.FrameChannelMetadataRecord.Builder clearCustomData() {
      customData = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public FrameChannelMetadataRecord build() {
      try {
        FrameChannelMetadataRecord record = new FrameChannelMetadataRecord();
        record.uri = fieldSetFlags()[0] ? this.uri : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.channelName = fieldSetFlags()[1] ? this.channelName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.dataKind = fieldSetFlags()[2] ? this.dataKind : (Energistics.Etp.v12.Datatypes.ChannelData.ChannelDataKind) defaultValue(fields()[2]);
        record.uom = fieldSetFlags()[3] ? this.uom : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.depthDatum = fieldSetFlags()[4] ? this.depthDatum : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.channelPropertyKindUri = fieldSetFlags()[5] ? this.channelPropertyKindUri : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.status = fieldSetFlags()[6] ? this.status : (Energistics.Etp.v12.Datatypes.Object.ActiveStatusKind) defaultValue(fields()[6]);
        record.source = fieldSetFlags()[7] ? this.source : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.axisVectorLengths = fieldSetFlags()[8] ? this.axisVectorLengths : (java.util.List<java.lang.Integer>) defaultValue(fields()[8]);
        record.attributeMetadata = fieldSetFlags()[9] ? this.attributeMetadata : (java.util.List<Energistics.Etp.v12.Datatypes.AttributeMetadataRecord>) defaultValue(fields()[9]);
        record.customData = fieldSetFlags()[10] ? this.customData : (java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue>) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FrameChannelMetadataRecord>
    WRITER$ = (org.apache.avro.io.DatumWriter<FrameChannelMetadataRecord>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FrameChannelMetadataRecord>
    READER$ = (org.apache.avro.io.DatumReader<FrameChannelMetadataRecord>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










