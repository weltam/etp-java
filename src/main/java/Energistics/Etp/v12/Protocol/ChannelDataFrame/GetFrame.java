/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Etp.v12.Protocol.ChannelDataFrame;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class GetFrame extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3287343234720559972L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GetFrame\",\"namespace\":\"Energistics.Etp.v12.Protocol.ChannelDataFrame\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"includeAllChannelSecondaryIndexes\",\"type\":\"boolean\",\"default\":false},{\"name\":\"requestedInterval\",\"type\":{\"type\":\"record\",\"name\":\"IndexInterval\",\"namespace\":\"Energistics.Etp.v12.Datatypes.Object\",\"fields\":[{\"name\":\"startIndex\",\"type\":{\"type\":\"record\",\"name\":\"IndexValue\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"long\",\"double\",{\"type\":\"record\",\"name\":\"PassIndexedDepth\",\"namespace\":\"Energistics.Etp.v12.Datatypes.ChannelData\",\"fields\":[{\"name\":\"pass\",\"type\":\"long\"},{\"name\":\"direction\",\"type\":{\"type\":\"enum\",\"name\":\"PassDirection\",\"symbols\":[\"Up\",\"HoldingSteady\",\"Down\"],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.PassDirection\",\"depends\":[]}},{\"name\":\"depth\",\"type\":\"double\"}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.PassIndexedDepth\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ChannelData.PassDirection\"]}]}],\"fullName\":\"Energistics.Etp.v12.Datatypes.IndexValue\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ChannelData.PassIndexedDepth\"]}},{\"name\":\"endIndex\",\"type\":\"Energistics.Etp.v12.Datatypes.IndexValue\"},{\"name\":\"uom\",\"type\":\"string\"},{\"name\":\"depthDatum\",\"type\":\"string\",\"default\":\"\"}],\"fullName\":\"Energistics.Etp.v12.Datatypes.Object.IndexInterval\",\"depends\":[\"Energistics.Etp.v12.Datatypes.IndexValue\",\"Energistics.Etp.v12.Datatypes.IndexValue\"]}},{\"name\":\"requestUuid\",\"type\":{\"type\":\"fixed\",\"name\":\"Uuid\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"size\":16,\"fullName\":\"Energistics.Etp.v12.Datatypes.Uuid\",\"depends\":[]}},{\"name\":\"requestedSecondaryIntervals\",\"type\":{\"type\":\"array\",\"items\":\"Energistics.Etp.v12.Datatypes.Object.IndexInterval\"},\"default\":[]}],\"protocol\":\"2\",\"messageType\":\"3\",\"senderRole\":\"customer\",\"protocolRoles\":\"store,customer\",\"multipartFlag\":false,\"fullName\":\"Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame\",\"depends\":[\"Energistics.Etp.v12.Datatypes.Object.IndexInterval\",\"Energistics.Etp.v12.Datatypes.Uuid\",\"Energistics.Etp.v12.Datatypes.Object.IndexInterval\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<GetFrame> ENCODER =
      new BinaryMessageEncoder<GetFrame>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<GetFrame> DECODER =
      new BinaryMessageDecoder<GetFrame>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<GetFrame> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<GetFrame> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<GetFrame> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<GetFrame>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this GetFrame to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a GetFrame from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a GetFrame instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static GetFrame fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence uri;
   private boolean includeAllChannelSecondaryIndexes;
   private Energistics.Etp.v12.Datatypes.Object.IndexInterval requestedInterval;
   private Energistics.Etp.v12.Datatypes.Uuid requestUuid;
   private java.util.List<Energistics.Etp.v12.Datatypes.Object.IndexInterval> requestedSecondaryIntervals;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GetFrame() {}

  /**
   * All-args constructor.
   * @param uri The new value for uri
   * @param includeAllChannelSecondaryIndexes The new value for includeAllChannelSecondaryIndexes
   * @param requestedInterval The new value for requestedInterval
   * @param requestUuid The new value for requestUuid
   * @param requestedSecondaryIntervals The new value for requestedSecondaryIntervals
   */
  public GetFrame(java.lang.CharSequence uri, java.lang.Boolean includeAllChannelSecondaryIndexes, Energistics.Etp.v12.Datatypes.Object.IndexInterval requestedInterval, Energistics.Etp.v12.Datatypes.Uuid requestUuid, java.util.List<Energistics.Etp.v12.Datatypes.Object.IndexInterval> requestedSecondaryIntervals) {
    this.uri = uri;
    this.includeAllChannelSecondaryIndexes = includeAllChannelSecondaryIndexes;
    this.requestedInterval = requestedInterval;
    this.requestUuid = requestUuid;
    this.requestedSecondaryIntervals = requestedSecondaryIntervals;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uri;
    case 1: return includeAllChannelSecondaryIndexes;
    case 2: return requestedInterval;
    case 3: return requestUuid;
    case 4: return requestedSecondaryIntervals;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uri = (java.lang.CharSequence)value$; break;
    case 1: includeAllChannelSecondaryIndexes = (java.lang.Boolean)value$; break;
    case 2: requestedInterval = (Energistics.Etp.v12.Datatypes.Object.IndexInterval)value$; break;
    case 3: requestUuid = (Energistics.Etp.v12.Datatypes.Uuid)value$; break;
    case 4: requestedSecondaryIntervals = (java.util.List<Energistics.Etp.v12.Datatypes.Object.IndexInterval>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'uri' field.
   * @return The value of the 'uri' field.
   */
  public java.lang.CharSequence getUri() {
    return uri;
  }


  /**
   * Sets the value of the 'uri' field.
   * @param value the value to set.
   */
  public void setUri(java.lang.CharSequence value) {
    this.uri = value;
  }

  /**
   * Gets the value of the 'includeAllChannelSecondaryIndexes' field.
   * @return The value of the 'includeAllChannelSecondaryIndexes' field.
   */
  public boolean getIncludeAllChannelSecondaryIndexes() {
    return includeAllChannelSecondaryIndexes;
  }


  /**
   * Sets the value of the 'includeAllChannelSecondaryIndexes' field.
   * @param value the value to set.
   */
  public void setIncludeAllChannelSecondaryIndexes(boolean value) {
    this.includeAllChannelSecondaryIndexes = value;
  }

  /**
   * Gets the value of the 'requestedInterval' field.
   * @return The value of the 'requestedInterval' field.
   */
  public Energistics.Etp.v12.Datatypes.Object.IndexInterval getRequestedInterval() {
    return requestedInterval;
  }


  /**
   * Sets the value of the 'requestedInterval' field.
   * @param value the value to set.
   */
  public void setRequestedInterval(Energistics.Etp.v12.Datatypes.Object.IndexInterval value) {
    this.requestedInterval = value;
  }

  /**
   * Gets the value of the 'requestUuid' field.
   * @return The value of the 'requestUuid' field.
   */
  public Energistics.Etp.v12.Datatypes.Uuid getRequestUuid() {
    return requestUuid;
  }


  /**
   * Sets the value of the 'requestUuid' field.
   * @param value the value to set.
   */
  public void setRequestUuid(Energistics.Etp.v12.Datatypes.Uuid value) {
    this.requestUuid = value;
  }

  /**
   * Gets the value of the 'requestedSecondaryIntervals' field.
   * @return The value of the 'requestedSecondaryIntervals' field.
   */
  public java.util.List<Energistics.Etp.v12.Datatypes.Object.IndexInterval> getRequestedSecondaryIntervals() {
    return requestedSecondaryIntervals;
  }


  /**
   * Sets the value of the 'requestedSecondaryIntervals' field.
   * @param value the value to set.
   */
  public void setRequestedSecondaryIntervals(java.util.List<Energistics.Etp.v12.Datatypes.Object.IndexInterval> value) {
    this.requestedSecondaryIntervals = value;
  }

  /**
   * Creates a new GetFrame RecordBuilder.
   * @return A new GetFrame RecordBuilder
   */
  public static Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder newBuilder() {
    return new Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder();
  }

  /**
   * Creates a new GetFrame RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GetFrame RecordBuilder
   */
  public static Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder newBuilder(Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder other) {
    if (other == null) {
      return new Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder();
    } else {
      return new Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder(other);
    }
  }

  /**
   * Creates a new GetFrame RecordBuilder by copying an existing GetFrame instance.
   * @param other The existing instance to copy.
   * @return A new GetFrame RecordBuilder
   */
  public static Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder newBuilder(Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame other) {
    if (other == null) {
      return new Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder();
    } else {
      return new Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder(other);
    }
  }

  /**
   * RecordBuilder for GetFrame instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GetFrame>
    implements org.apache.avro.data.RecordBuilder<GetFrame> {

    private java.lang.CharSequence uri;
    private boolean includeAllChannelSecondaryIndexes;
    private Energistics.Etp.v12.Datatypes.Object.IndexInterval requestedInterval;
    private Energistics.Etp.v12.Datatypes.Object.IndexInterval.Builder requestedIntervalBuilder;
    private Energistics.Etp.v12.Datatypes.Uuid requestUuid;
    private java.util.List<Energistics.Etp.v12.Datatypes.Object.IndexInterval> requestedSecondaryIntervals;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uri)) {
        this.uri = data().deepCopy(fields()[0].schema(), other.uri);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.includeAllChannelSecondaryIndexes)) {
        this.includeAllChannelSecondaryIndexes = data().deepCopy(fields()[1].schema(), other.includeAllChannelSecondaryIndexes);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.requestedInterval)) {
        this.requestedInterval = data().deepCopy(fields()[2].schema(), other.requestedInterval);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasRequestedIntervalBuilder()) {
        this.requestedIntervalBuilder = Energistics.Etp.v12.Datatypes.Object.IndexInterval.newBuilder(other.getRequestedIntervalBuilder());
      }
      if (isValidValue(fields()[3], other.requestUuid)) {
        this.requestUuid = data().deepCopy(fields()[3].schema(), other.requestUuid);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.requestedSecondaryIntervals)) {
        this.requestedSecondaryIntervals = data().deepCopy(fields()[4].schema(), other.requestedSecondaryIntervals);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing GetFrame instance
     * @param other The existing instance to copy.
     */
    private Builder(Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.uri)) {
        this.uri = data().deepCopy(fields()[0].schema(), other.uri);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.includeAllChannelSecondaryIndexes)) {
        this.includeAllChannelSecondaryIndexes = data().deepCopy(fields()[1].schema(), other.includeAllChannelSecondaryIndexes);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.requestedInterval)) {
        this.requestedInterval = data().deepCopy(fields()[2].schema(), other.requestedInterval);
        fieldSetFlags()[2] = true;
      }
      this.requestedIntervalBuilder = null;
      if (isValidValue(fields()[3], other.requestUuid)) {
        this.requestUuid = data().deepCopy(fields()[3].schema(), other.requestUuid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.requestedSecondaryIntervals)) {
        this.requestedSecondaryIntervals = data().deepCopy(fields()[4].schema(), other.requestedSecondaryIntervals);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'uri' field.
      * @return The value.
      */
    public java.lang.CharSequence getUri() {
      return uri;
    }


    /**
      * Sets the value of the 'uri' field.
      * @param value The value of 'uri'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder setUri(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.uri = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uri' field has been set.
      * @return True if the 'uri' field has been set, false otherwise.
      */
    public boolean hasUri() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uri' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder clearUri() {
      uri = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'includeAllChannelSecondaryIndexes' field.
      * @return The value.
      */
    public boolean getIncludeAllChannelSecondaryIndexes() {
      return includeAllChannelSecondaryIndexes;
    }


    /**
      * Sets the value of the 'includeAllChannelSecondaryIndexes' field.
      * @param value The value of 'includeAllChannelSecondaryIndexes'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder setIncludeAllChannelSecondaryIndexes(boolean value) {
      validate(fields()[1], value);
      this.includeAllChannelSecondaryIndexes = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'includeAllChannelSecondaryIndexes' field has been set.
      * @return True if the 'includeAllChannelSecondaryIndexes' field has been set, false otherwise.
      */
    public boolean hasIncludeAllChannelSecondaryIndexes() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'includeAllChannelSecondaryIndexes' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder clearIncludeAllChannelSecondaryIndexes() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestedInterval' field.
      * @return The value.
      */
    public Energistics.Etp.v12.Datatypes.Object.IndexInterval getRequestedInterval() {
      return requestedInterval;
    }


    /**
      * Sets the value of the 'requestedInterval' field.
      * @param value The value of 'requestedInterval'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder setRequestedInterval(Energistics.Etp.v12.Datatypes.Object.IndexInterval value) {
      validate(fields()[2], value);
      this.requestedIntervalBuilder = null;
      this.requestedInterval = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'requestedInterval' field has been set.
      * @return True if the 'requestedInterval' field has been set, false otherwise.
      */
    public boolean hasRequestedInterval() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'requestedInterval' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public Energistics.Etp.v12.Datatypes.Object.IndexInterval.Builder getRequestedIntervalBuilder() {
      if (requestedIntervalBuilder == null) {
        if (hasRequestedInterval()) {
          setRequestedIntervalBuilder(Energistics.Etp.v12.Datatypes.Object.IndexInterval.newBuilder(requestedInterval));
        } else {
          setRequestedIntervalBuilder(Energistics.Etp.v12.Datatypes.Object.IndexInterval.newBuilder());
        }
      }
      return requestedIntervalBuilder;
    }

    /**
     * Sets the Builder instance for the 'requestedInterval' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder setRequestedIntervalBuilder(Energistics.Etp.v12.Datatypes.Object.IndexInterval.Builder value) {
      clearRequestedInterval();
      requestedIntervalBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'requestedInterval' field has an active Builder instance
     * @return True if the 'requestedInterval' field has an active Builder instance
     */
    public boolean hasRequestedIntervalBuilder() {
      return requestedIntervalBuilder != null;
    }

    /**
      * Clears the value of the 'requestedInterval' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder clearRequestedInterval() {
      requestedInterval = null;
      requestedIntervalBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestUuid' field.
      * @return The value.
      */
    public Energistics.Etp.v12.Datatypes.Uuid getRequestUuid() {
      return requestUuid;
    }


    /**
      * Sets the value of the 'requestUuid' field.
      * @param value The value of 'requestUuid'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder setRequestUuid(Energistics.Etp.v12.Datatypes.Uuid value) {
      validate(fields()[3], value);
      this.requestUuid = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'requestUuid' field has been set.
      * @return True if the 'requestUuid' field has been set, false otherwise.
      */
    public boolean hasRequestUuid() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'requestUuid' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder clearRequestUuid() {
      requestUuid = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestedSecondaryIntervals' field.
      * @return The value.
      */
    public java.util.List<Energistics.Etp.v12.Datatypes.Object.IndexInterval> getRequestedSecondaryIntervals() {
      return requestedSecondaryIntervals;
    }


    /**
      * Sets the value of the 'requestedSecondaryIntervals' field.
      * @param value The value of 'requestedSecondaryIntervals'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder setRequestedSecondaryIntervals(java.util.List<Energistics.Etp.v12.Datatypes.Object.IndexInterval> value) {
      validate(fields()[4], value);
      this.requestedSecondaryIntervals = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'requestedSecondaryIntervals' field has been set.
      * @return True if the 'requestedSecondaryIntervals' field has been set, false otherwise.
      */
    public boolean hasRequestedSecondaryIntervals() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'requestedSecondaryIntervals' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.ChannelDataFrame.GetFrame.Builder clearRequestedSecondaryIntervals() {
      requestedSecondaryIntervals = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public GetFrame build() {
      try {
        GetFrame record = new GetFrame();
        record.uri = fieldSetFlags()[0] ? this.uri : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.includeAllChannelSecondaryIndexes = fieldSetFlags()[1] ? this.includeAllChannelSecondaryIndexes : (java.lang.Boolean) defaultValue(fields()[1]);
        if (requestedIntervalBuilder != null) {
          try {
            record.requestedInterval = this.requestedIntervalBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("requestedInterval"));
            throw e;
          }
        } else {
          record.requestedInterval = fieldSetFlags()[2] ? this.requestedInterval : (Energistics.Etp.v12.Datatypes.Object.IndexInterval) defaultValue(fields()[2]);
        }
        record.requestUuid = fieldSetFlags()[3] ? this.requestUuid : (Energistics.Etp.v12.Datatypes.Uuid) defaultValue(fields()[3]);
        record.requestedSecondaryIntervals = fieldSetFlags()[4] ? this.requestedSecondaryIntervals : (java.util.List<Energistics.Etp.v12.Datatypes.Object.IndexInterval>) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<GetFrame>
    WRITER$ = (org.apache.avro.io.DatumWriter<GetFrame>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<GetFrame>
    READER$ = (org.apache.avro.io.DatumReader<GetFrame>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










