/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Etp.v12.Protocol.Core;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class OpenSession extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8002561997629809452L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OpenSession\",\"namespace\":\"Energistics.Etp.v12.Protocol.Core\",\"fields\":[{\"name\":\"applicationName\",\"type\":\"string\"},{\"name\":\"applicationVersion\",\"type\":\"string\"},{\"name\":\"serverInstanceId\",\"type\":{\"type\":\"fixed\",\"name\":\"Uuid\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"size\":16,\"fullName\":\"Energistics.Etp.v12.Datatypes.Uuid\",\"depends\":[]}},{\"name\":\"supportedProtocols\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"SupportedProtocol\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"fields\":[{\"name\":\"protocol\",\"type\":\"int\"},{\"name\":\"protocolVersion\",\"type\":{\"type\":\"record\",\"name\":\"Version\",\"fields\":[{\"name\":\"major\",\"type\":\"int\",\"default\":0},{\"name\":\"minor\",\"type\":\"int\",\"default\":0},{\"name\":\"revision\",\"type\":\"int\",\"default\":0},{\"name\":\"patch\",\"type\":\"int\",\"default\":0}],\"fullName\":\"Energistics.Etp.v12.Datatypes.Version\",\"depends\":[]}},{\"name\":\"role\",\"type\":\"string\"},{\"name\":\"protocolCapabilities\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"DataValue\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"boolean\",\"int\",\"long\",\"float\",\"double\",\"string\",{\"type\":\"record\",\"name\":\"ArrayOfBoolean\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"boolean\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfBoolean\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfNullableBoolean\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"boolean\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfNullableBoolean\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfInt\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"int\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfInt\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfNullableInt\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"int\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfNullableInt\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfLong\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"long\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfLong\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfNullableLong\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"long\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfNullableLong\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfFloat\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"float\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfFloat\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfDouble\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfDouble\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfString\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfString\",\"depends\":[]},{\"type\":\"record\",\"name\":\"ArrayOfBytes\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"bytes\"}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ArrayOfBytes\",\"depends\":[]},\"bytes\",{\"type\":\"record\",\"name\":\"AnySparseArray\",\"fields\":[{\"name\":\"slices\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AnySubarray\",\"fields\":[{\"name\":\"start\",\"type\":\"long\"},{\"name\":\"slice\",\"type\":{\"type\":\"record\",\"name\":\"AnyArray\",\"fields\":[{\"name\":\"item\",\"type\":[\"ArrayOfBoolean\",\"ArrayOfInt\",\"ArrayOfLong\",\"ArrayOfFloat\",\"ArrayOfDouble\",\"ArrayOfString\",\"bytes\"]}],\"fullName\":\"Energistics.Etp.v12.Datatypes.AnyArray\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ArrayOfBoolean\",\"Energistics.Etp.v12.Datatypes.ArrayOfInt\",\"Energistics.Etp.v12.Datatypes.ArrayOfLong\",\"Energistics.Etp.v12.Datatypes.ArrayOfFloat\",\"Energistics.Etp.v12.Datatypes.ArrayOfDouble\",\"Energistics.Etp.v12.Datatypes.ArrayOfString\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.AnySubarray\",\"depends\":[\"Energistics.Etp.v12.Datatypes.AnyArray\"]}}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.AnySparseArray\",\"depends\":[\"Energistics.Etp.v12.Datatypes.AnySubarray\"]}]}],\"fullName\":\"Energistics.Etp.v12.Datatypes.DataValue\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ArrayOfBoolean\",\"Energistics.Etp.v12.Datatypes.ArrayOfNullableBoolean\",\"Energistics.Etp.v12.Datatypes.ArrayOfInt\",\"Energistics.Etp.v12.Datatypes.ArrayOfNullableInt\",\"Energistics.Etp.v12.Datatypes.ArrayOfLong\",\"Energistics.Etp.v12.Datatypes.ArrayOfNullableLong\",\"Energistics.Etp.v12.Datatypes.ArrayOfFloat\",\"Energistics.Etp.v12.Datatypes.ArrayOfDouble\",\"Energistics.Etp.v12.Datatypes.ArrayOfString\",\"Energistics.Etp.v12.Datatypes.ArrayOfBytes\",\"Energistics.Etp.v12.Datatypes.AnySparseArray\"]}},\"default\":{}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.SupportedProtocol\",\"depends\":[\"Energistics.Etp.v12.Datatypes.Version\",\"Energistics.Etp.v12.Datatypes.DataValue\"]}}},{\"name\":\"supportedDataObjects\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"SupportedDataObject\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"fields\":[{\"name\":\"qualifiedType\",\"type\":\"string\"},{\"name\":\"dataObjectCapabilities\",\"type\":{\"type\":\"map\",\"values\":\"DataValue\"},\"default\":{}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.SupportedDataObject\",\"depends\":[\"Energistics.Etp.v12.Datatypes.DataValue\"]}}},{\"name\":\"supportedCompression\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"supportedFormats\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[\"xml\"]},{\"name\":\"currentDateTime\",\"type\":\"long\"},{\"name\":\"earliestRetainedChangeTime\",\"type\":\"long\"},{\"name\":\"sessionId\",\"type\":\"Energistics.Etp.v12.Datatypes.Uuid\"},{\"name\":\"endpointCapabilities\",\"type\":{\"type\":\"map\",\"values\":\"Energistics.Etp.v12.Datatypes.DataValue\"},\"default\":{}}],\"protocol\":\"0\",\"messageType\":\"2\",\"senderRole\":\"server\",\"protocolRoles\":\"client, server\",\"multipartFlag\":false,\"fullName\":\"Energistics.Etp.v12.Protocol.Core.OpenSession\",\"depends\":[\"Energistics.Etp.v12.Datatypes.Uuid\",\"Energistics.Etp.v12.Datatypes.SupportedProtocol\",\"Energistics.Etp.v12.Datatypes.SupportedDataObject\",\"Energistics.Etp.v12.Datatypes.Uuid\",\"Energistics.Etp.v12.Datatypes.DataValue\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OpenSession> ENCODER =
      new BinaryMessageEncoder<OpenSession>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OpenSession> DECODER =
      new BinaryMessageDecoder<OpenSession>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OpenSession> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OpenSession> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OpenSession> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OpenSession>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OpenSession to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OpenSession from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OpenSession instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OpenSession fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence applicationName;
   private java.lang.CharSequence applicationVersion;
   private Energistics.Etp.v12.Datatypes.Uuid serverInstanceId;
   private java.util.List<Energistics.Etp.v12.Datatypes.SupportedProtocol> supportedProtocols;
   private java.util.List<Energistics.Etp.v12.Datatypes.SupportedDataObject> supportedDataObjects;
   private java.lang.CharSequence supportedCompression;
   private java.util.List<java.lang.CharSequence> supportedFormats;
   private long currentDateTime;
   private long earliestRetainedChangeTime;
   private Energistics.Etp.v12.Datatypes.Uuid sessionId;
   private java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> endpointCapabilities;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OpenSession() {}

  /**
   * All-args constructor.
   * @param applicationName The new value for applicationName
   * @param applicationVersion The new value for applicationVersion
   * @param serverInstanceId The new value for serverInstanceId
   * @param supportedProtocols The new value for supportedProtocols
   * @param supportedDataObjects The new value for supportedDataObjects
   * @param supportedCompression The new value for supportedCompression
   * @param supportedFormats The new value for supportedFormats
   * @param currentDateTime The new value for currentDateTime
   * @param earliestRetainedChangeTime The new value for earliestRetainedChangeTime
   * @param sessionId The new value for sessionId
   * @param endpointCapabilities The new value for endpointCapabilities
   */
  public OpenSession(java.lang.CharSequence applicationName, java.lang.CharSequence applicationVersion, Energistics.Etp.v12.Datatypes.Uuid serverInstanceId, java.util.List<Energistics.Etp.v12.Datatypes.SupportedProtocol> supportedProtocols, java.util.List<Energistics.Etp.v12.Datatypes.SupportedDataObject> supportedDataObjects, java.lang.CharSequence supportedCompression, java.util.List<java.lang.CharSequence> supportedFormats, java.lang.Long currentDateTime, java.lang.Long earliestRetainedChangeTime, Energistics.Etp.v12.Datatypes.Uuid sessionId, java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> endpointCapabilities) {
    this.applicationName = applicationName;
    this.applicationVersion = applicationVersion;
    this.serverInstanceId = serverInstanceId;
    this.supportedProtocols = supportedProtocols;
    this.supportedDataObjects = supportedDataObjects;
    this.supportedCompression = supportedCompression;
    this.supportedFormats = supportedFormats;
    this.currentDateTime = currentDateTime;
    this.earliestRetainedChangeTime = earliestRetainedChangeTime;
    this.sessionId = sessionId;
    this.endpointCapabilities = endpointCapabilities;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return applicationName;
    case 1: return applicationVersion;
    case 2: return serverInstanceId;
    case 3: return supportedProtocols;
    case 4: return supportedDataObjects;
    case 5: return supportedCompression;
    case 6: return supportedFormats;
    case 7: return currentDateTime;
    case 8: return earliestRetainedChangeTime;
    case 9: return sessionId;
    case 10: return endpointCapabilities;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: applicationName = (java.lang.CharSequence)value$; break;
    case 1: applicationVersion = (java.lang.CharSequence)value$; break;
    case 2: serverInstanceId = (Energistics.Etp.v12.Datatypes.Uuid)value$; break;
    case 3: supportedProtocols = (java.util.List<Energistics.Etp.v12.Datatypes.SupportedProtocol>)value$; break;
    case 4: supportedDataObjects = (java.util.List<Energistics.Etp.v12.Datatypes.SupportedDataObject>)value$; break;
    case 5: supportedCompression = (java.lang.CharSequence)value$; break;
    case 6: supportedFormats = (java.util.List<java.lang.CharSequence>)value$; break;
    case 7: currentDateTime = (java.lang.Long)value$; break;
    case 8: earliestRetainedChangeTime = (java.lang.Long)value$; break;
    case 9: sessionId = (Energistics.Etp.v12.Datatypes.Uuid)value$; break;
    case 10: endpointCapabilities = (java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'applicationName' field.
   * @return The value of the 'applicationName' field.
   */
  public java.lang.CharSequence getApplicationName() {
    return applicationName;
  }


  /**
   * Sets the value of the 'applicationName' field.
   * @param value the value to set.
   */
  public void setApplicationName(java.lang.CharSequence value) {
    this.applicationName = value;
  }

  /**
   * Gets the value of the 'applicationVersion' field.
   * @return The value of the 'applicationVersion' field.
   */
  public java.lang.CharSequence getApplicationVersion() {
    return applicationVersion;
  }


  /**
   * Sets the value of the 'applicationVersion' field.
   * @param value the value to set.
   */
  public void setApplicationVersion(java.lang.CharSequence value) {
    this.applicationVersion = value;
  }

  /**
   * Gets the value of the 'serverInstanceId' field.
   * @return The value of the 'serverInstanceId' field.
   */
  public Energistics.Etp.v12.Datatypes.Uuid getServerInstanceId() {
    return serverInstanceId;
  }


  /**
   * Sets the value of the 'serverInstanceId' field.
   * @param value the value to set.
   */
  public void setServerInstanceId(Energistics.Etp.v12.Datatypes.Uuid value) {
    this.serverInstanceId = value;
  }

  /**
   * Gets the value of the 'supportedProtocols' field.
   * @return The value of the 'supportedProtocols' field.
   */
  public java.util.List<Energistics.Etp.v12.Datatypes.SupportedProtocol> getSupportedProtocols() {
    return supportedProtocols;
  }


  /**
   * Sets the value of the 'supportedProtocols' field.
   * @param value the value to set.
   */
  public void setSupportedProtocols(java.util.List<Energistics.Etp.v12.Datatypes.SupportedProtocol> value) {
    this.supportedProtocols = value;
  }

  /**
   * Gets the value of the 'supportedDataObjects' field.
   * @return The value of the 'supportedDataObjects' field.
   */
  public java.util.List<Energistics.Etp.v12.Datatypes.SupportedDataObject> getSupportedDataObjects() {
    return supportedDataObjects;
  }


  /**
   * Sets the value of the 'supportedDataObjects' field.
   * @param value the value to set.
   */
  public void setSupportedDataObjects(java.util.List<Energistics.Etp.v12.Datatypes.SupportedDataObject> value) {
    this.supportedDataObjects = value;
  }

  /**
   * Gets the value of the 'supportedCompression' field.
   * @return The value of the 'supportedCompression' field.
   */
  public java.lang.CharSequence getSupportedCompression() {
    return supportedCompression;
  }


  /**
   * Sets the value of the 'supportedCompression' field.
   * @param value the value to set.
   */
  public void setSupportedCompression(java.lang.CharSequence value) {
    this.supportedCompression = value;
  }

  /**
   * Gets the value of the 'supportedFormats' field.
   * @return The value of the 'supportedFormats' field.
   */
  public java.util.List<java.lang.CharSequence> getSupportedFormats() {
    return supportedFormats;
  }


  /**
   * Sets the value of the 'supportedFormats' field.
   * @param value the value to set.
   */
  public void setSupportedFormats(java.util.List<java.lang.CharSequence> value) {
    this.supportedFormats = value;
  }

  /**
   * Gets the value of the 'currentDateTime' field.
   * @return The value of the 'currentDateTime' field.
   */
  public long getCurrentDateTime() {
    return currentDateTime;
  }


  /**
   * Sets the value of the 'currentDateTime' field.
   * @param value the value to set.
   */
  public void setCurrentDateTime(long value) {
    this.currentDateTime = value;
  }

  /**
   * Gets the value of the 'earliestRetainedChangeTime' field.
   * @return The value of the 'earliestRetainedChangeTime' field.
   */
  public long getEarliestRetainedChangeTime() {
    return earliestRetainedChangeTime;
  }


  /**
   * Sets the value of the 'earliestRetainedChangeTime' field.
   * @param value the value to set.
   */
  public void setEarliestRetainedChangeTime(long value) {
    this.earliestRetainedChangeTime = value;
  }

  /**
   * Gets the value of the 'sessionId' field.
   * @return The value of the 'sessionId' field.
   */
  public Energistics.Etp.v12.Datatypes.Uuid getSessionId() {
    return sessionId;
  }


  /**
   * Sets the value of the 'sessionId' field.
   * @param value the value to set.
   */
  public void setSessionId(Energistics.Etp.v12.Datatypes.Uuid value) {
    this.sessionId = value;
  }

  /**
   * Gets the value of the 'endpointCapabilities' field.
   * @return The value of the 'endpointCapabilities' field.
   */
  public java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> getEndpointCapabilities() {
    return endpointCapabilities;
  }


  /**
   * Sets the value of the 'endpointCapabilities' field.
   * @param value the value to set.
   */
  public void setEndpointCapabilities(java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> value) {
    this.endpointCapabilities = value;
  }

  /**
   * Creates a new OpenSession RecordBuilder.
   * @return A new OpenSession RecordBuilder
   */
  public static Energistics.Etp.v12.Protocol.Core.OpenSession.Builder newBuilder() {
    return new Energistics.Etp.v12.Protocol.Core.OpenSession.Builder();
  }

  /**
   * Creates a new OpenSession RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OpenSession RecordBuilder
   */
  public static Energistics.Etp.v12.Protocol.Core.OpenSession.Builder newBuilder(Energistics.Etp.v12.Protocol.Core.OpenSession.Builder other) {
    if (other == null) {
      return new Energistics.Etp.v12.Protocol.Core.OpenSession.Builder();
    } else {
      return new Energistics.Etp.v12.Protocol.Core.OpenSession.Builder(other);
    }
  }

  /**
   * Creates a new OpenSession RecordBuilder by copying an existing OpenSession instance.
   * @param other The existing instance to copy.
   * @return A new OpenSession RecordBuilder
   */
  public static Energistics.Etp.v12.Protocol.Core.OpenSession.Builder newBuilder(Energistics.Etp.v12.Protocol.Core.OpenSession other) {
    if (other == null) {
      return new Energistics.Etp.v12.Protocol.Core.OpenSession.Builder();
    } else {
      return new Energistics.Etp.v12.Protocol.Core.OpenSession.Builder(other);
    }
  }

  /**
   * RecordBuilder for OpenSession instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OpenSession>
    implements org.apache.avro.data.RecordBuilder<OpenSession> {

    private java.lang.CharSequence applicationName;
    private java.lang.CharSequence applicationVersion;
    private Energistics.Etp.v12.Datatypes.Uuid serverInstanceId;
    private java.util.List<Energistics.Etp.v12.Datatypes.SupportedProtocol> supportedProtocols;
    private java.util.List<Energistics.Etp.v12.Datatypes.SupportedDataObject> supportedDataObjects;
    private java.lang.CharSequence supportedCompression;
    private java.util.List<java.lang.CharSequence> supportedFormats;
    private long currentDateTime;
    private long earliestRetainedChangeTime;
    private Energistics.Etp.v12.Datatypes.Uuid sessionId;
    private java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> endpointCapabilities;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Energistics.Etp.v12.Protocol.Core.OpenSession.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.applicationName)) {
        this.applicationName = data().deepCopy(fields()[0].schema(), other.applicationName);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.applicationVersion)) {
        this.applicationVersion = data().deepCopy(fields()[1].schema(), other.applicationVersion);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.serverInstanceId)) {
        this.serverInstanceId = data().deepCopy(fields()[2].schema(), other.serverInstanceId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.supportedProtocols)) {
        this.supportedProtocols = data().deepCopy(fields()[3].schema(), other.supportedProtocols);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.supportedDataObjects)) {
        this.supportedDataObjects = data().deepCopy(fields()[4].schema(), other.supportedDataObjects);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.supportedCompression)) {
        this.supportedCompression = data().deepCopy(fields()[5].schema(), other.supportedCompression);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.supportedFormats)) {
        this.supportedFormats = data().deepCopy(fields()[6].schema(), other.supportedFormats);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.currentDateTime)) {
        this.currentDateTime = data().deepCopy(fields()[7].schema(), other.currentDateTime);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.earliestRetainedChangeTime)) {
        this.earliestRetainedChangeTime = data().deepCopy(fields()[8].schema(), other.earliestRetainedChangeTime);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[9].schema(), other.sessionId);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.endpointCapabilities)) {
        this.endpointCapabilities = data().deepCopy(fields()[10].schema(), other.endpointCapabilities);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing OpenSession instance
     * @param other The existing instance to copy.
     */
    private Builder(Energistics.Etp.v12.Protocol.Core.OpenSession other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.applicationName)) {
        this.applicationName = data().deepCopy(fields()[0].schema(), other.applicationName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.applicationVersion)) {
        this.applicationVersion = data().deepCopy(fields()[1].schema(), other.applicationVersion);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.serverInstanceId)) {
        this.serverInstanceId = data().deepCopy(fields()[2].schema(), other.serverInstanceId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.supportedProtocols)) {
        this.supportedProtocols = data().deepCopy(fields()[3].schema(), other.supportedProtocols);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.supportedDataObjects)) {
        this.supportedDataObjects = data().deepCopy(fields()[4].schema(), other.supportedDataObjects);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.supportedCompression)) {
        this.supportedCompression = data().deepCopy(fields()[5].schema(), other.supportedCompression);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.supportedFormats)) {
        this.supportedFormats = data().deepCopy(fields()[6].schema(), other.supportedFormats);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.currentDateTime)) {
        this.currentDateTime = data().deepCopy(fields()[7].schema(), other.currentDateTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.earliestRetainedChangeTime)) {
        this.earliestRetainedChangeTime = data().deepCopy(fields()[8].schema(), other.earliestRetainedChangeTime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[9].schema(), other.sessionId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.endpointCapabilities)) {
        this.endpointCapabilities = data().deepCopy(fields()[10].schema(), other.endpointCapabilities);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'applicationName' field.
      * @return The value.
      */
    public java.lang.CharSequence getApplicationName() {
      return applicationName;
    }


    /**
      * Sets the value of the 'applicationName' field.
      * @param value The value of 'applicationName'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder setApplicationName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.applicationName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'applicationName' field has been set.
      * @return True if the 'applicationName' field has been set, false otherwise.
      */
    public boolean hasApplicationName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'applicationName' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder clearApplicationName() {
      applicationName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'applicationVersion' field.
      * @return The value.
      */
    public java.lang.CharSequence getApplicationVersion() {
      return applicationVersion;
    }


    /**
      * Sets the value of the 'applicationVersion' field.
      * @param value The value of 'applicationVersion'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder setApplicationVersion(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.applicationVersion = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'applicationVersion' field has been set.
      * @return True if the 'applicationVersion' field has been set, false otherwise.
      */
    public boolean hasApplicationVersion() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'applicationVersion' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder clearApplicationVersion() {
      applicationVersion = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'serverInstanceId' field.
      * @return The value.
      */
    public Energistics.Etp.v12.Datatypes.Uuid getServerInstanceId() {
      return serverInstanceId;
    }


    /**
      * Sets the value of the 'serverInstanceId' field.
      * @param value The value of 'serverInstanceId'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder setServerInstanceId(Energistics.Etp.v12.Datatypes.Uuid value) {
      validate(fields()[2], value);
      this.serverInstanceId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'serverInstanceId' field has been set.
      * @return True if the 'serverInstanceId' field has been set, false otherwise.
      */
    public boolean hasServerInstanceId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'serverInstanceId' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder clearServerInstanceId() {
      serverInstanceId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'supportedProtocols' field.
      * @return The value.
      */
    public java.util.List<Energistics.Etp.v12.Datatypes.SupportedProtocol> getSupportedProtocols() {
      return supportedProtocols;
    }


    /**
      * Sets the value of the 'supportedProtocols' field.
      * @param value The value of 'supportedProtocols'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder setSupportedProtocols(java.util.List<Energistics.Etp.v12.Datatypes.SupportedProtocol> value) {
      validate(fields()[3], value);
      this.supportedProtocols = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'supportedProtocols' field has been set.
      * @return True if the 'supportedProtocols' field has been set, false otherwise.
      */
    public boolean hasSupportedProtocols() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'supportedProtocols' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder clearSupportedProtocols() {
      supportedProtocols = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'supportedDataObjects' field.
      * @return The value.
      */
    public java.util.List<Energistics.Etp.v12.Datatypes.SupportedDataObject> getSupportedDataObjects() {
      return supportedDataObjects;
    }


    /**
      * Sets the value of the 'supportedDataObjects' field.
      * @param value The value of 'supportedDataObjects'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder setSupportedDataObjects(java.util.List<Energistics.Etp.v12.Datatypes.SupportedDataObject> value) {
      validate(fields()[4], value);
      this.supportedDataObjects = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'supportedDataObjects' field has been set.
      * @return True if the 'supportedDataObjects' field has been set, false otherwise.
      */
    public boolean hasSupportedDataObjects() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'supportedDataObjects' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder clearSupportedDataObjects() {
      supportedDataObjects = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'supportedCompression' field.
      * @return The value.
      */
    public java.lang.CharSequence getSupportedCompression() {
      return supportedCompression;
    }


    /**
      * Sets the value of the 'supportedCompression' field.
      * @param value The value of 'supportedCompression'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder setSupportedCompression(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.supportedCompression = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'supportedCompression' field has been set.
      * @return True if the 'supportedCompression' field has been set, false otherwise.
      */
    public boolean hasSupportedCompression() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'supportedCompression' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder clearSupportedCompression() {
      supportedCompression = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'supportedFormats' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getSupportedFormats() {
      return supportedFormats;
    }


    /**
      * Sets the value of the 'supportedFormats' field.
      * @param value The value of 'supportedFormats'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder setSupportedFormats(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[6], value);
      this.supportedFormats = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'supportedFormats' field has been set.
      * @return True if the 'supportedFormats' field has been set, false otherwise.
      */
    public boolean hasSupportedFormats() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'supportedFormats' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder clearSupportedFormats() {
      supportedFormats = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'currentDateTime' field.
      * @return The value.
      */
    public long getCurrentDateTime() {
      return currentDateTime;
    }


    /**
      * Sets the value of the 'currentDateTime' field.
      * @param value The value of 'currentDateTime'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder setCurrentDateTime(long value) {
      validate(fields()[7], value);
      this.currentDateTime = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'currentDateTime' field has been set.
      * @return True if the 'currentDateTime' field has been set, false otherwise.
      */
    public boolean hasCurrentDateTime() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'currentDateTime' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder clearCurrentDateTime() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'earliestRetainedChangeTime' field.
      * @return The value.
      */
    public long getEarliestRetainedChangeTime() {
      return earliestRetainedChangeTime;
    }


    /**
      * Sets the value of the 'earliestRetainedChangeTime' field.
      * @param value The value of 'earliestRetainedChangeTime'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder setEarliestRetainedChangeTime(long value) {
      validate(fields()[8], value);
      this.earliestRetainedChangeTime = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'earliestRetainedChangeTime' field has been set.
      * @return True if the 'earliestRetainedChangeTime' field has been set, false otherwise.
      */
    public boolean hasEarliestRetainedChangeTime() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'earliestRetainedChangeTime' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder clearEarliestRetainedChangeTime() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionId' field.
      * @return The value.
      */
    public Energistics.Etp.v12.Datatypes.Uuid getSessionId() {
      return sessionId;
    }


    /**
      * Sets the value of the 'sessionId' field.
      * @param value The value of 'sessionId'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder setSessionId(Energistics.Etp.v12.Datatypes.Uuid value) {
      validate(fields()[9], value);
      this.sessionId = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionId' field has been set.
      * @return True if the 'sessionId' field has been set, false otherwise.
      */
    public boolean hasSessionId() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'sessionId' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder clearSessionId() {
      sessionId = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'endpointCapabilities' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> getEndpointCapabilities() {
      return endpointCapabilities;
    }


    /**
      * Sets the value of the 'endpointCapabilities' field.
      * @param value The value of 'endpointCapabilities'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder setEndpointCapabilities(java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue> value) {
      validate(fields()[10], value);
      this.endpointCapabilities = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'endpointCapabilities' field has been set.
      * @return True if the 'endpointCapabilities' field has been set, false otherwise.
      */
    public boolean hasEndpointCapabilities() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'endpointCapabilities' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.Core.OpenSession.Builder clearEndpointCapabilities() {
      endpointCapabilities = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OpenSession build() {
      try {
        OpenSession record = new OpenSession();
        record.applicationName = fieldSetFlags()[0] ? this.applicationName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.applicationVersion = fieldSetFlags()[1] ? this.applicationVersion : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.serverInstanceId = fieldSetFlags()[2] ? this.serverInstanceId : (Energistics.Etp.v12.Datatypes.Uuid) defaultValue(fields()[2]);
        record.supportedProtocols = fieldSetFlags()[3] ? this.supportedProtocols : (java.util.List<Energistics.Etp.v12.Datatypes.SupportedProtocol>) defaultValue(fields()[3]);
        record.supportedDataObjects = fieldSetFlags()[4] ? this.supportedDataObjects : (java.util.List<Energistics.Etp.v12.Datatypes.SupportedDataObject>) defaultValue(fields()[4]);
        record.supportedCompression = fieldSetFlags()[5] ? this.supportedCompression : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.supportedFormats = fieldSetFlags()[6] ? this.supportedFormats : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[6]);
        record.currentDateTime = fieldSetFlags()[7] ? this.currentDateTime : (java.lang.Long) defaultValue(fields()[7]);
        record.earliestRetainedChangeTime = fieldSetFlags()[8] ? this.earliestRetainedChangeTime : (java.lang.Long) defaultValue(fields()[8]);
        record.sessionId = fieldSetFlags()[9] ? this.sessionId : (Energistics.Etp.v12.Datatypes.Uuid) defaultValue(fields()[9]);
        record.endpointCapabilities = fieldSetFlags()[10] ? this.endpointCapabilities : (java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.DataValue>) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OpenSession>
    WRITER$ = (org.apache.avro.io.DatumWriter<OpenSession>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OpenSession>
    READER$ = (org.apache.avro.io.DatumReader<OpenSession>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










