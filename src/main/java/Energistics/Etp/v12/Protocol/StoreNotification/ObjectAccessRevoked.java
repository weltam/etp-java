/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Etp.v12.Protocol.StoreNotification;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ObjectAccessRevoked extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6185933980040981410L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ObjectAccessRevoked\",\"namespace\":\"Energistics.Etp.v12.Protocol.StoreNotification\",\"fields\":[{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"changeTime\",\"type\":\"long\"},{\"name\":\"requestUuid\",\"type\":{\"type\":\"fixed\",\"name\":\"Uuid\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"size\":16,\"fullName\":\"Energistics.Etp.v12.Datatypes.Uuid\",\"depends\":[]}}],\"protocol\":\"5\",\"messageType\":\"5\",\"senderRole\":\"store\",\"protocolRoles\":\"store,customer\",\"multipartFlag\":false,\"fullName\":\"Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked\",\"depends\":[\"Energistics.Etp.v12.Datatypes.Uuid\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ObjectAccessRevoked> ENCODER =
      new BinaryMessageEncoder<ObjectAccessRevoked>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ObjectAccessRevoked> DECODER =
      new BinaryMessageDecoder<ObjectAccessRevoked>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ObjectAccessRevoked> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ObjectAccessRevoked> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ObjectAccessRevoked> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ObjectAccessRevoked>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ObjectAccessRevoked to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ObjectAccessRevoked from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ObjectAccessRevoked instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ObjectAccessRevoked fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence uri;
   private long changeTime;
   private Energistics.Etp.v12.Datatypes.Uuid requestUuid;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ObjectAccessRevoked() {}

  /**
   * All-args constructor.
   * @param uri The new value for uri
   * @param changeTime The new value for changeTime
   * @param requestUuid The new value for requestUuid
   */
  public ObjectAccessRevoked(java.lang.CharSequence uri, java.lang.Long changeTime, Energistics.Etp.v12.Datatypes.Uuid requestUuid) {
    this.uri = uri;
    this.changeTime = changeTime;
    this.requestUuid = requestUuid;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uri;
    case 1: return changeTime;
    case 2: return requestUuid;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uri = (java.lang.CharSequence)value$; break;
    case 1: changeTime = (java.lang.Long)value$; break;
    case 2: requestUuid = (Energistics.Etp.v12.Datatypes.Uuid)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'uri' field.
   * @return The value of the 'uri' field.
   */
  public java.lang.CharSequence getUri() {
    return uri;
  }


  /**
   * Sets the value of the 'uri' field.
   * @param value the value to set.
   */
  public void setUri(java.lang.CharSequence value) {
    this.uri = value;
  }

  /**
   * Gets the value of the 'changeTime' field.
   * @return The value of the 'changeTime' field.
   */
  public long getChangeTime() {
    return changeTime;
  }


  /**
   * Sets the value of the 'changeTime' field.
   * @param value the value to set.
   */
  public void setChangeTime(long value) {
    this.changeTime = value;
  }

  /**
   * Gets the value of the 'requestUuid' field.
   * @return The value of the 'requestUuid' field.
   */
  public Energistics.Etp.v12.Datatypes.Uuid getRequestUuid() {
    return requestUuid;
  }


  /**
   * Sets the value of the 'requestUuid' field.
   * @param value the value to set.
   */
  public void setRequestUuid(Energistics.Etp.v12.Datatypes.Uuid value) {
    this.requestUuid = value;
  }

  /**
   * Creates a new ObjectAccessRevoked RecordBuilder.
   * @return A new ObjectAccessRevoked RecordBuilder
   */
  public static Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder newBuilder() {
    return new Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder();
  }

  /**
   * Creates a new ObjectAccessRevoked RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ObjectAccessRevoked RecordBuilder
   */
  public static Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder newBuilder(Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder other) {
    if (other == null) {
      return new Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder();
    } else {
      return new Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder(other);
    }
  }

  /**
   * Creates a new ObjectAccessRevoked RecordBuilder by copying an existing ObjectAccessRevoked instance.
   * @param other The existing instance to copy.
   * @return A new ObjectAccessRevoked RecordBuilder
   */
  public static Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder newBuilder(Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked other) {
    if (other == null) {
      return new Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder();
    } else {
      return new Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder(other);
    }
  }

  /**
   * RecordBuilder for ObjectAccessRevoked instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ObjectAccessRevoked>
    implements org.apache.avro.data.RecordBuilder<ObjectAccessRevoked> {

    private java.lang.CharSequence uri;
    private long changeTime;
    private Energistics.Etp.v12.Datatypes.Uuid requestUuid;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uri)) {
        this.uri = data().deepCopy(fields()[0].schema(), other.uri);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.changeTime)) {
        this.changeTime = data().deepCopy(fields()[1].schema(), other.changeTime);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.requestUuid)) {
        this.requestUuid = data().deepCopy(fields()[2].schema(), other.requestUuid);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing ObjectAccessRevoked instance
     * @param other The existing instance to copy.
     */
    private Builder(Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.uri)) {
        this.uri = data().deepCopy(fields()[0].schema(), other.uri);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.changeTime)) {
        this.changeTime = data().deepCopy(fields()[1].schema(), other.changeTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.requestUuid)) {
        this.requestUuid = data().deepCopy(fields()[2].schema(), other.requestUuid);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'uri' field.
      * @return The value.
      */
    public java.lang.CharSequence getUri() {
      return uri;
    }


    /**
      * Sets the value of the 'uri' field.
      * @param value The value of 'uri'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder setUri(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.uri = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uri' field has been set.
      * @return True if the 'uri' field has been set, false otherwise.
      */
    public boolean hasUri() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uri' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder clearUri() {
      uri = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'changeTime' field.
      * @return The value.
      */
    public long getChangeTime() {
      return changeTime;
    }


    /**
      * Sets the value of the 'changeTime' field.
      * @param value The value of 'changeTime'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder setChangeTime(long value) {
      validate(fields()[1], value);
      this.changeTime = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'changeTime' field has been set.
      * @return True if the 'changeTime' field has been set, false otherwise.
      */
    public boolean hasChangeTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'changeTime' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder clearChangeTime() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestUuid' field.
      * @return The value.
      */
    public Energistics.Etp.v12.Datatypes.Uuid getRequestUuid() {
      return requestUuid;
    }


    /**
      * Sets the value of the 'requestUuid' field.
      * @param value The value of 'requestUuid'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder setRequestUuid(Energistics.Etp.v12.Datatypes.Uuid value) {
      validate(fields()[2], value);
      this.requestUuid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'requestUuid' field has been set.
      * @return True if the 'requestUuid' field has been set, false otherwise.
      */
    public boolean hasRequestUuid() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'requestUuid' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.StoreNotification.ObjectAccessRevoked.Builder clearRequestUuid() {
      requestUuid = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ObjectAccessRevoked build() {
      try {
        ObjectAccessRevoked record = new ObjectAccessRevoked();
        record.uri = fieldSetFlags()[0] ? this.uri : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.changeTime = fieldSetFlags()[1] ? this.changeTime : (java.lang.Long) defaultValue(fields()[1]);
        record.requestUuid = fieldSetFlags()[2] ? this.requestUuid : (Energistics.Etp.v12.Datatypes.Uuid) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ObjectAccessRevoked>
    WRITER$ = (org.apache.avro.io.DatumWriter<ObjectAccessRevoked>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ObjectAccessRevoked>
    READER$ = (org.apache.avro.io.DatumReader<ObjectAccessRevoked>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.uri);

    out.writeLong(this.changeTime);

    out.writeFixed(this.requestUuid.bytes(), 0, 16);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.uri = in.readString(this.uri instanceof Utf8 ? (Utf8)this.uri : null);

      this.changeTime = in.readLong();

      if (this.requestUuid == null) {
        this.requestUuid = new Energistics.Etp.v12.Datatypes.Uuid();
      }
      in.readFixed(this.requestUuid.bytes(), 0, 16);

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.uri = in.readString(this.uri instanceof Utf8 ? (Utf8)this.uri : null);
          break;

        case 1:
          this.changeTime = in.readLong();
          break;

        case 2:
          if (this.requestUuid == null) {
            this.requestUuid = new Energistics.Etp.v12.Datatypes.Uuid();
          }
          in.readFixed(this.requestUuid.bytes(), 0, 16);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










