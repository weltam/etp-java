/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Etp.v12.Protocol.ChannelSubscribe;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class GetChangeAnnotationsResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 156291835045407052L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GetChangeAnnotationsResponse\",\"namespace\":\"Energistics.Etp.v12.Protocol.ChannelSubscribe\",\"fields\":[{\"name\":\"changes\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"ChangeResponseInfo\",\"namespace\":\"Energistics.Etp.v12.Datatypes.Object\",\"fields\":[{\"name\":\"responseTimestamp\",\"type\":\"long\"},{\"name\":\"changes\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ChangeAnnotation\",\"fields\":[{\"name\":\"changeTime\",\"type\":\"long\"},{\"name\":\"interval\",\"type\":{\"type\":\"record\",\"name\":\"IndexInterval\",\"fields\":[{\"name\":\"startIndex\",\"type\":{\"type\":\"record\",\"name\":\"IndexValue\",\"namespace\":\"Energistics.Etp.v12.Datatypes\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"long\",\"double\",{\"type\":\"record\",\"name\":\"PassIndexedDepth\",\"namespace\":\"Energistics.Etp.v12.Datatypes.ChannelData\",\"fields\":[{\"name\":\"pass\",\"type\":\"long\"},{\"name\":\"direction\",\"type\":{\"type\":\"enum\",\"name\":\"PassDirection\",\"symbols\":[\"Up\",\"HoldingSteady\",\"Down\"],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.PassDirection\",\"depends\":[]}},{\"name\":\"depth\",\"type\":\"double\"}],\"fullName\":\"Energistics.Etp.v12.Datatypes.ChannelData.PassIndexedDepth\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ChannelData.PassDirection\"]}]}],\"fullName\":\"Energistics.Etp.v12.Datatypes.IndexValue\",\"depends\":[\"Energistics.Etp.v12.Datatypes.ChannelData.PassIndexedDepth\"]}},{\"name\":\"endIndex\",\"type\":\"Energistics.Etp.v12.Datatypes.IndexValue\"},{\"name\":\"uom\",\"type\":\"string\"},{\"name\":\"depthDatum\",\"type\":\"string\",\"default\":\"\"}],\"fullName\":\"Energistics.Etp.v12.Datatypes.Object.IndexInterval\",\"depends\":[\"Energistics.Etp.v12.Datatypes.IndexValue\",\"Energistics.Etp.v12.Datatypes.IndexValue\"]}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.Object.ChangeAnnotation\",\"depends\":[\"Energistics.Etp.v12.Datatypes.Object.IndexInterval\"]}}}}],\"fullName\":\"Energistics.Etp.v12.Datatypes.Object.ChangeResponseInfo\",\"depends\":[\"Energistics.Etp.v12.Datatypes.Object.ChangeAnnotation\"]}}}],\"protocol\":\"21\",\"messageType\":\"15\",\"senderRole\":\"store\",\"protocolRoles\":\"store,customer\",\"multipartFlag\":true,\"fullName\":\"Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse\",\"depends\":[\"Energistics.Etp.v12.Datatypes.Object.ChangeResponseInfo\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<GetChangeAnnotationsResponse> ENCODER =
      new BinaryMessageEncoder<GetChangeAnnotationsResponse>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<GetChangeAnnotationsResponse> DECODER =
      new BinaryMessageDecoder<GetChangeAnnotationsResponse>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<GetChangeAnnotationsResponse> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<GetChangeAnnotationsResponse> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<GetChangeAnnotationsResponse> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<GetChangeAnnotationsResponse>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this GetChangeAnnotationsResponse to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a GetChangeAnnotationsResponse from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a GetChangeAnnotationsResponse instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static GetChangeAnnotationsResponse fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.Object.ChangeResponseInfo> changes;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GetChangeAnnotationsResponse() {}

  /**
   * All-args constructor.
   * @param changes The new value for changes
   */
  public GetChangeAnnotationsResponse(java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.Object.ChangeResponseInfo> changes) {
    this.changes = changes;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return changes;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: changes = (java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.Object.ChangeResponseInfo>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'changes' field.
   * @return The value of the 'changes' field.
   */
  public java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.Object.ChangeResponseInfo> getChanges() {
    return changes;
  }


  /**
   * Sets the value of the 'changes' field.
   * @param value the value to set.
   */
  public void setChanges(java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.Object.ChangeResponseInfo> value) {
    this.changes = value;
  }

  /**
   * Creates a new GetChangeAnnotationsResponse RecordBuilder.
   * @return A new GetChangeAnnotationsResponse RecordBuilder
   */
  public static Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse.Builder newBuilder() {
    return new Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse.Builder();
  }

  /**
   * Creates a new GetChangeAnnotationsResponse RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GetChangeAnnotationsResponse RecordBuilder
   */
  public static Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse.Builder newBuilder(Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse.Builder other) {
    if (other == null) {
      return new Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse.Builder();
    } else {
      return new Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse.Builder(other);
    }
  }

  /**
   * Creates a new GetChangeAnnotationsResponse RecordBuilder by copying an existing GetChangeAnnotationsResponse instance.
   * @param other The existing instance to copy.
   * @return A new GetChangeAnnotationsResponse RecordBuilder
   */
  public static Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse.Builder newBuilder(Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse other) {
    if (other == null) {
      return new Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse.Builder();
    } else {
      return new Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse.Builder(other);
    }
  }

  /**
   * RecordBuilder for GetChangeAnnotationsResponse instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GetChangeAnnotationsResponse>
    implements org.apache.avro.data.RecordBuilder<GetChangeAnnotationsResponse> {

    private java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.Object.ChangeResponseInfo> changes;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.changes)) {
        this.changes = data().deepCopy(fields()[0].schema(), other.changes);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
    }

    /**
     * Creates a Builder by copying an existing GetChangeAnnotationsResponse instance
     * @param other The existing instance to copy.
     */
    private Builder(Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.changes)) {
        this.changes = data().deepCopy(fields()[0].schema(), other.changes);
        fieldSetFlags()[0] = true;
      }
    }

    /**
      * Gets the value of the 'changes' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.Object.ChangeResponseInfo> getChanges() {
      return changes;
    }


    /**
      * Sets the value of the 'changes' field.
      * @param value The value of 'changes'.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse.Builder setChanges(java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.Object.ChangeResponseInfo> value) {
      validate(fields()[0], value);
      this.changes = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'changes' field has been set.
      * @return True if the 'changes' field has been set, false otherwise.
      */
    public boolean hasChanges() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'changes' field.
      * @return This builder.
      */
    public Energistics.Etp.v12.Protocol.ChannelSubscribe.GetChangeAnnotationsResponse.Builder clearChanges() {
      changes = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public GetChangeAnnotationsResponse build() {
      try {
        GetChangeAnnotationsResponse record = new GetChangeAnnotationsResponse();
        record.changes = fieldSetFlags()[0] ? this.changes : (java.util.Map<java.lang.CharSequence,Energistics.Etp.v12.Datatypes.Object.ChangeResponseInfo>) defaultValue(fields()[0]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<GetChangeAnnotationsResponse>
    WRITER$ = (org.apache.avro.io.DatumWriter<GetChangeAnnotationsResponse>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<GetChangeAnnotationsResponse>
    READER$ = (org.apache.avro.io.DatumReader<GetChangeAnnotationsResponse>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










